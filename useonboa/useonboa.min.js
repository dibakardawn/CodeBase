CJW.jfp.widget.Core.version = '1.6';
citiResponsive.useOnBoa = (function (window, $) {

	parent.initialize = function (pageName) {
		$('#password, #cbolui_onboard_confPassword, #email, #cardNumber, #year, #mobileNo').on("cut copy paste",function(e) {
			e.preventDefault();
		});
		$('html, body').animate({scrollTop: '0px'},0);
		if (pageName === 'cardInfo') {
			citiResponsive.utils.attachTooltips('appBody');

			var validationObj = parseJSONFromDOMElement('validationRule');

			//Set maxlength of card number from alidation rule json object
			setMaxLength(validationObj,['cardNumber','ssn','cardZipCodeValue']);


			//Restrict user from entering non numeric characters in card number
			restrictNonNumericChars(['cardNumber','year']);
			
			//cardNumber Formatting
			cardNumber_f = '';
			eventIdentifire = '';
			doFormate = true;
			oldformatFlag = 0;
			startPos = 0;
			endPos = 0;
			$('#cardNumber').on('keyup', function (e) {
				var cardNumber;
				if(eventIdentifire === 'PASTE'){
					cardNumber = cardNumber_f;
				}else{
					cardNumber = $(this).val();
				}
				//Reseting Global Variables
				cardNumber_f = '';
				eventIdentifire = '';
				var formatFlag = parseInt($(this).attr("maxlength"));
				if(formatFlag === 15){ 
					oldformatFlag = formatFlag;
					formatFlag = formatFlag + 2;//For 15 + 2 '-'s 
					$(this).attr("maxlength",formatFlag);
				}
				if(formatFlag === 16){ 
					oldformatFlag = formatFlag;
					formatFlag = formatFlag + 3; //For 16 + 3 '-'s
					$(this).attr("maxlength",formatFlag);
				}
				var elementForPos = document.getElementById('cardNumber');
				startPos = elementForPos.selectionStart;
				endPos = elementForPos.selectionEnd;
				var UFcard = cardNumber.replace(/-/g, '');
				if(oldformatFlag === 16){
					//---------------------Cursor postion Manipulation for '-'--------------------
					if(UFcard.length === 5 && startPos === 5){
						startPos = UFcard.length + 1;
						endPos = UFcard.length + 1;
					}else if(UFcard.length === 9 && startPos === 10){
						startPos = UFcard.length + 2;
						endPos = UFcard.length + 2;
					}else if(UFcard.length === 13 && startPos === 15){
						startPos = UFcard.length + 3;
						endPos = UFcard.length + 3;
					}
					//---------------------Cursor postion Manipulation for '-'--------------------
				}
				if(oldformatFlag === 15){
					//---------------------Cursor postion Manipulation for '-'--------------------
					if(UFcard.length === 5 && startPos === 5){
						startPos = UFcard.length + 1;
						endPos = UFcard.length + 1;
					}else if(UFcard.length === 11 && startPos === 12){
						startPos = UFcard.length + 2;
						endPos = UFcard.length + 2;
					}
					//---------------------Cursor postion Manipulation for '-'--------------------
				}
				var formattedcardNumber = formatter(cardNumber, formatFlag);
				$(this).val(formattedcardNumber);
				elementForPos.selectionStart = startPos;
				elementForPos.selectionEnd = endPos;
			});
			
			$('#cardNumber').on('focusout', function (e) {
				var $this = $(this);
				var cardNumber = $this.val();
				var formatFlag = parseInt($this.attr("maxlength"));
				if(cardNumber !== ''){
					var formattedcardNumber = formatter(cardNumber, formatFlag);
					$this.val(formattedcardNumber);
					$this.trigger('change.validation');
				}
			});

			$('#showZipcodelink, #showSSNlink').on('click', function () {
				$('#ssnWrapper').toggleClass('cbolui-hidden');
				$('#cardZipCodeValueWrapper').toggleClass('cbolui-hidden');
				$('#cardZipCodeValue, #ssn').each(function(){
					$(this).val( $(this).val()+'1').trigger('change.validation').val('').blur();
				});
				
				if($('#ssnWrapper').hasClass('cbolui-hidden')){
					$('#ssnFlag').val('false');
				}else{
					$('#ssnFlag').val('true');
				}
				//------------------Regenerate placeholder after ssn or zipcode value getting cleared--------------
				if(typeof Modernizr !== "undefined" && !Modernizr.input.placeholder) {
					if($('[placeholder]').length > 0){
						$('[placeholder]').trigger('blur.cbolui-placeholder'); 
					}
				}
				//------------------Regenerate placeholder after ssn or zipcode value getting cleared--------------
			});

			$('#useonboa-cardInfo-submit').on('click', function () {
				validObj = $.extend({}, validationObj);
				var dobValidationRule = validObj.dateOfBirth;
				delete validObj.dateOfBirth;
				if($('#ssnFlag').val() === 'true')
				{
					delete validObj.cardZipCodeValue;
				}else{
					delete validObj.ssn;
				}

				//Apply validation only on raw card number
				var $cardNumber = $('#cardNumber'); 
				var cardNumber = $cardNumber.val();
				var rawCardNumber = cardNumber.replace(/-/g , '');
				$cardNumber.val(rawCardNumber);

				var  errors = citiResponsive.utils.clientValidationModule.validate(validObj);

				var dobValidation = false;

				if(dobValidationRule != undefined && 
					dobValidationRule.clientValidationRequired !== null && 
					dobValidationRule.clientValidationRequired === true &&
					dobValidationRule.mandatoryValidation !== null && 
					dobValidationRule.mandatoryValidation.clientValidation === true
					){
					var day = $('#day').val();
					var month = $('#month').val();
					var year = $.trim( $('#year').val() );
					if(day === '0' || month === '0' || year === ''){
						errors.push({fieldId:'dateOfBirth',error:dobValidationRule.mandatoryValidation.errorMessage})
						dobValidation = true;
					}
				}
				if(dobValidation){
					citiResponsive.utils.renderFieldErrors(errors);
				}
				if(errors.length == 0){
					//--------To get back value of year field from masking------------------------------
					/*$("#year").val(yeartxt);
					var yearStared = '';
					for(var i = 0; i < yeartxt.length; i++){
						yearStared = yearStared + maskOptions.dob.maskingChar;
					}
					$("#year").addClass('cbolui-hidden');
					$("#year").after('<input type="text" maxlength="4" class="form-control" id="yearMasked" name="yearMasked" value="' + yearStared + '">');*/
					//--------To get back value of year field from masking------------------------------
					if(citiResponsive.utils.responsiveBoolean()){
						window.scrollTo(0, 0);
					}
					submitByFormId('cardInfoForm');
				}else{
					$('#securityCode').val('');
					$cardNumber.val(cardNumber);
				}
			});
			
			//----------------------------DOB Masking--------------------------
			monthval = '';
			monthtxt = '';
			dayval = '';
			daytxt = '';
			yeartxt = $('#year').val();
			if(parent.dobMasking === true){
				if(typeof maskOptions !== "undefined"){
					if(maskOptions.dob.maskingOption === "true"){
						
						$('#month').on('focus mousedown keydown', function () {
							if($('#year').val() !== ''){
								if($('#year').val().indexOf(maskOptions.dob.maskingChar) === -1){
									yeartxt = $('#year').val();
								}
							}
							unMask();
						});
						
						$('#month').on('blur', function () {
							DOBMask();								
						});
						
						$('#day').on('focus mousedown keydown', function () {
							if($('#year').val() !== ''){
								if($('#year').val().indexOf(maskOptions.dob.maskingChar) === -1){
									yeartxt = $('#year').val();
								}
							}
							unMask();
						});
						
						$('#day').on('blur', function () {
							DOBMask();								
						});
						
						$('#year').on('focus', function () {
							if(yeartxt !== $.trim($("#year").val())){
								unMask();
							}
						});
						
						$('#year').on('blur', function () {
							DOBMask();	
						});
					}
				}
			}
			
			function DOBMask(){
				var decisionTomask = false;
				var monthFocus =  $('#month').is(':focus');
				var dayFocus = $('#day').is(':focus');
				var yearFocus = $('#year').is(':focus');
				if(monthFocus === false && dayFocus === false && yearFocus === false){
					decisionTomask = true;
				}
				
				monthval = $.trim($('select#month option:selected').val());
				monthtxt = $.trim($('select#month option:selected').text());
				dayval = $.trim($('select#day option:selected').val());
				daytxt = $.trim($('select#day option:selected').text());
				yeartxt = $('#year').val();
				if(monthtxt !== '' && monthval !== '0' && dayval !== '0' && daytxt !== '' && yeartxt.length === 4 && decisionTomask){
					var monthStar = staring(monthtxt,maskOptions.dob.maskingChar);
					$("#month option[value='" + monthval + "']").text(monthStar);
					$("#month").removeClass('validation-input-danger');
					var dayStar = staring(daytxt,maskOptions.dob.maskingChar);
					$("#day option[value='" + dayval + "']").text(dayStar);
					$("#day").removeClass('validation-input-danger');
					var yearStar = staring(yeartxt,maskOptions.dob.maskingChar);
					$("#year").val(yearStar);
					$("#year").removeClass('validation-input-danger');
				}
			}
			
			function unMask(){
				if( $("#month option[value='" + monthval + "']").text().indexOf(maskOptions.dob.maskingChar) !== -1){
					$("#month option[value='" + monthval + "']").text(monthtxt);
					$("#day option[value='" + dayval + "']").text(daytxt);
					$("#year").val(yeartxt);
					var eleYear = document.getElementById('year');
			        eleYear.selectionStart = yeartxt.length;
			        eleYear.selectionEnd = yeartxt.length;
				}
			}
			
			function staring(str, maskingChar){
				var Star = '';
				for(var i = 0; i < str.length; i++){
					Star = Star + maskingChar;
				}
				return Star;
			}
			//----------------------------DOB Masking--------------------------
			
			$("#month option").each(function()
			{
				if($(this).val() !== 0){
					$(this).css('font-style','normal').css('color','#333');
				}
			});
			$("#month").on('change', function(){
				var montVal = $("#month option:selected").val();
				if(montVal > 0){
					$("#month").css('font-style','normal').css('color','#333');
				}else{
					$("#month").css('font-style','italic').css('color','#666');
				}
			});
			$("#day option").each(function()
			{
				if($(this).val() !== 0){
					$(this).css('font-style','normal').css('color','#333');
				}
			});
			$("#day").on('change', function(){
				var dayVal = $("#day option:selected").val();
				if(dayVal > 0){
					$("#day").css('font-style','normal').css('color','#333');
				}else{
					$("#day").css('font-style','italic').css('color','#666');
				}
			});
			
			if(citiResponsive.utils.responsiveBoolean()){
				citiResponsive.utils.setUpJampinit("#pageWrapper", true, ((window.screen.availHeight * 50)/100 + 'px').toString(), false, "");
			}else{
				citiResponsive.utils.setUpJampinit("#pageWrapper", true, "", false, "");
			}
			citiResponsive.leaveConfirmation.leaveConfirmationinit($('#elseWhereText').html());
			
		} else if (pageName === 'contactInfo') {
			citiResponsive.utils.attachTooltips('appBody');
			
			//Set max length to input fields as per validation rules
			var validationObj = parseJSONFromDOMElement('validationRule');
			setMaxLength(validationObj,['mobileNo','email']);
			
			//Restrict user from entering non numeric characters in card number
			restrictNonNumericChars(['mobileNo']);
			
			//Modify styles for device browsers
			modifyStylesForDevice();
			
			//---------------------Phone Number formatting------------------------
			mobileNo_f = '';
			eventIdentifire = '';
			oldPhformatFlag = 0;
			phstartPos = 0;
			phendPos = 0;
			$('#mobileNo').on('keyup', function (e) {
				var mobileNo;
				if(eventIdentifire === 'PASTE'){
					mobileNo = mobileNo_f;
				}else{
					mobileNo = $(this).val();
				}
				//Reseting Global Variables
				mobileNo_f = '';
				eventIdentifire = '';
				var formatFlag = parseInt($(this).attr("maxlength"));
				if(formatFlag === 10){ 
					oldPhformatFlag = formatFlag;
					formatFlag = formatFlag + 4;//For 10 & 2 '-' s & 1 '(' & 1 ')'
					$(this).attr("maxlength",formatFlag);
				}
				var sidekeyCodeArr = [ 37, 39];//left, Right Keys
				var delkeyCodeArr = [ 8, 46];//BackSpace, Delete Keys
				var evt = e || window.event;
				var elementForPos = document.getElementById('mobileNo');
				phstartPos = elementForPos.selectionStart;
				phendPos = elementForPos.selectionEnd;
				var UFmobileNo = mobileNo.replace(/-/g, '').replace('(', '').replace(')', '');
				if(oldPhformatFlag === 10){
					//---------------------Cursor postion Manipulation for '-'--------------------
					if(UFmobileNo.length === 3 && phstartPos === 3){
						phstartPos = UFmobileNo.length + 2;
						phendPos = UFmobileNo.length + 2;
					}else if(UFmobileNo.length === 4 && phstartPos === 4){
						phstartPos = UFmobileNo.length + 3;
						phendPos = UFmobileNo.length + 3;
					}else if(UFmobileNo.length === 4 && phstartPos === 6){
						if($.inArray(evt.keyCode, sidekeyCodeArr) === -1){
							phstartPos = UFmobileNo.length + 4;
							phendPos = UFmobileNo.length + 4;
						}else{
							phstartPos = UFmobileNo.length + 2;
							phendPos = UFmobileNo.length + 2;
						}
					}else if(UFmobileNo.length === 7 && phstartPos === 10){
						if($.inArray(evt.keyCode, sidekeyCodeArr) === -1){
							if($.inArray(evt.keyCode, delkeyCodeArr) === -1){
								phstartPos = UFmobileNo.length + 5;
								phendPos = UFmobileNo.length + 5;
							}
						}
					}else if(UFmobileNo.length === 8 && phstartPos === 10){
						if($.inArray(evt.keyCode, sidekeyCodeArr) === -1){
							if($.inArray(evt.keyCode, delkeyCodeArr) === -1){
								phstartPos = UFmobileNo.length + 3;
								phendPos = UFmobileNo.length + 3;
							}
						}
					}
					//---------------------Cursor postion Manipulation for '-'--------------------
				}
				var formattedmobileNo = mobileNoformatter(mobileNo, formatFlag);
				$(this).val(formattedmobileNo);
				elementForPos.selectionStart = phstartPos;
				elementForPos.selectionEnd = phendPos;
			});
			
			$('#mobileNo').on('focusout', function (e) {
				var $this = $(this);
				mobileNo = $this.val();
				var formatFlag = parseInt($this.attr("maxlength"));
				if(mobileNo !== ''){
					var formattedmobileNo = mobileNoformatter(mobileNo, formatFlag);
					$this.val(formattedmobileNo);
					$this.trigger('change.validation');
				}
			});

			//---------------------Phone Number formatting------------------------
			
			$('#useonboa-contact-submit').on('click', function () {
				var validObj = parseJSONFromDOMElement('validationRule');
				var phNumberFormatted = $('#mobileNo').val();
		        var phNumber = phNumberFormatted.replace(/-/g, '').replace(/\(|\)/g, "");
		        $('#mobileNo').val(phNumber);
				var  errors = citiResponsive.utils.clientValidationModule.validate(validObj);	
				if(errors.length == 0){
					if(citiResponsive.utils.responsiveBoolean()){
						window.scrollTo(0, 0);
					}
					submitByFormId('contactInfoForm');
				}else{
					$('#mobileNo').val(phNumberFormatted);
				}
			});
			
			$('#emailPreference1').prop('checked', true);
			
			citiResponsive.leaveConfirmation.leaveConfirmationinit($('#elseWhereText').html());
		} else if (pageName === 'createUserIdForm') {
			
			//Modify styles for device browsers
			modifyStylesForDevice();
			
			$("#userID").blur(function(){
				var text=$(this).val();
				$(this).val($.trim(text));
			});
			var validationOn=false;
			var validationOff=false;
			var validationObj= $('#validationJson').text();
			validationObj= $.parseJSON(validationObj);
			passwordJson= validationObj.password;
			var passwordErrMsg= passwordJson.mandatoryValidation.errorMessage;
			if(primaryUserVal=="true"){
				delete validationObj.stcCode;
				}
			delete validationObj.password;
			citiResponsive.utils.attachTooltips('stcWrapper','top');
			citiResponsive.utils.attachTooltips('userIdWrapper','top');
			$("#paperLessComm").hide();
			$('#cbolui_onboard_createUserRadio').on('click', function () {
				$('.createUserIdSection').removeClass('hidden');
				$('#userID').mask();
				$('div[id^=dynamicTextBox_]').each(function () {
					$('div[id^=dynamicTextBox_]').addClass('hidden');
				});
			});

			$('input:radio').on('change',function(){
				$('.createUserIdSection input:text').val('');
				$('.createUserIdSection input:password').val('');
				$('#[id^=cbolui_onboard_existingPassword_]').val('');
				if($('#cbolui_onboard_createUserRadio').is(':checked') ){
				//$('.validation-message-danger').remove();
				//originalUserID='';
				$('#userID').mask();
				$('input:#[id^=cbolui_onboard_existingPassword_]').empty()
				$('#[id^=cbolui_onboard_existingPassword_]').removeClass('validation-input-danger');
				$('#durationFieldSet').removeClass("validation-input-danger")
					$('#cbolui-createUserCTA').removeClass('hidden');
					$('#cbolui-linkUserCTA').addClass('hidden');
				}
				
				 if($('#[id^=existingUserId_]').is(':checked')){
				$('#password').removeClass('redBorder');
				$("#userID,#userIDMasked").prop("disabled",false);
				$('#errorPassMsgDiv').empty();
				//$('.validation-message-danger').remove();
				$('#checkAvail').empty();
				$('#correctMsgDiv').text('');
				$('#userID-error-text').empty();
				$('#cbolui_onboard_confPassword-error-text').empty()
				$('#userID').removeClass('validation-input-danger');
				$('#password').removeClass('validation-input-danger');
				$('#cbolui_onboard_confPassword').removeClass('validation-input-danger');
				$('#durationFieldSet').removeClass("validation-input-danger")
				
					$('#cbolui-createUserCTA').addClass('hidden');
					$('#cbolui-linkUserCTA').removeClass('hidden');
				}

			});

			$('[id^="existingUserId_"]:not([id$="-label"]').change(function () {
				var user_val = $(this).attr('id')
				var index = user_val.split("_");
				$('div[id^=dynamicTextBox_]').each(function () {
					$this = $(this);
					eid = $this.attr('id');
					if (eid == 'dynamicTextBox_' + index[1]) {
						$('.createUserIdSection').addClass('hidden');
						$this.removeClass('hidden');
					} else {
						$this.addClass('hidden');
					}
				});
			});
			//Check availabilty
			$("#Input_AvalabilityLink").off('click').on('click',function(){
				citiResponsive.utils.setUpJampinit("#pageWrapper", false, '', false, scrollToTopFunc);
				//citiResponsive.utils.renderFieldErrors([]);
				validationOff=true;
				hideUserIdList();
				if($('#userID').val() != ''){
					submitByFormIdForCheckAvailability('createUserIdForm');	
				}else{
					$('#userID').blur();
					$("#addCheckClass").tmpl().appendTo($("#checkAvail").empty());
					$("#avalabilityOptionDisplay").removeClass('hidden');
					if(validationOn==false) {
						$("#availabilityMessage1").removeClass('hidden');
						
						$('#errorTextForAvail').text(userIdEmptyMsg);
					}
					
					//$('#setupNewUserIdValueMasked').trigger('focus');
					//$("#password").val('');
					//$("#cbolui_onboard_confPassword").val('');
					citiResponsive.passwordRuleMeter.init();
				}
				
				function scrollToTopFunc(){
					if(citiResponsive.utils.responsiveBoolean()){
						var offsetHObj = $("#CBOLSpinner");
						if(offsetHObj.length > 0 ){
							var vTop = offsetHObj.offset().top;
							vTop = (vTop - 50);
							window.scrollTo(0,vTop);
						}
					}
				}

			});
			
			$('#useonboa-cbolui-linkUser').on('click', function () {
				$('#pageLevelErrDiv').empty();
				var errors=[];
				var a= $("#createUserIdForm input[type='radio']:checked").attr('id').split('_');
				var radioId= 'existingUserId_'+a[1];
				var textFieldWrapper= "dynamicTextBox_"+a[1];
				var passwordId= 'cbolui_onboard_existingPassword_'+a[1];
					
				if($('#'+radioId).is(':checked')){
				if(	$('#'+passwordId).val()==''){
				errors.push({fieldId:passwordId, error:pwdEmptyMsg});
				citiResponsive.utils.renderFieldErrors(errors);
				}
					if ($('#switch-toggle').is(":checked")) {
					if($('#paperlessOption').is(":checked")==false){
					errors.push({fieldId:"paperlessOption", error:paperlessOptnEmpty});
					citiResponsive.utils.renderFieldErrors(errors);
					//$('.cbolui-form-fieldset').removeClass('validation-input-danger');
					}
					}
					else{
					$('#paperlessOption').attr("checked",false);
					}
					
				
				} 	if(errors.length==0){
					submitByFormForLinkUser('createUserIdForm');
					}
				});
				$('#useonboa-cbolui-createUserIdSubmit').off('click').on('click', function () {
				
				validationOn=true;
				$('#pageLevelErrDiv').empty();
				
				//$("#addCheckClass").tmpl().appendTo($("#checkAvail").empty());
				if(validationOff==true){
					$("#availabilityMessage1").addClass('hidden');
					$('#errorTextForAvail').text('');
					
				}
				
				var errors = citiResponsive.utils.clientValidationModule.validate(validationObj);
					if ($('#switch-toggle').is(":checked")) {
					if($('#paperlessOption').is(":checked")==false){
					errors.push({fieldId:"paperlessOption", error:paperlessOptnEmpty});
					citiResponsive.utils.renderFieldErrors(errors);
					//$('.cbolui-form-fieldset').removeClass('validation-input-danger');
					}
					}
					
					$("#cbolui_onboard_createUserRadio").attr('checked', 'checked').trigger('click');
					if($('#userID').val()==''){
						$('#checkAvail').empty();
						if($.trim($('#cbolui_onboard_confPassword').val())=='' && $.trim($('#password').val())=='' ){
						
						for(var i = 0; i<validationRules.length; i++){
						validationRules[i].isValid = 'FALSE';
					}
					
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
						errors.push({fieldId:"cbolui_onboard_confPassword", error:confirmPwdEmptyMsg});
						errors.push({fieldId:"password", error:''});
						citiResponsive.utils.renderFieldErrors(errors);
						$('#password_tooltip').click();
						$('div .passwordRuleMeterToolTip-initialStatusText').text(passwordErrMsg);
						$('#password-error-text').remove();
						//$('.cbolui-form-fieldset').removeClass('validation-input-danger');
						$('#password').val('');
						$('#cbolui_onboard_confPassword').val('');
						$('#correctMsgDiv').text('');
						$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
						
					}
					else if($.trim($('#cbolui_onboard_confPassword').val())==''){
					citiResponsive.passwordRuleMeter.updateJsonbyIsvalidBlanck();
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
					$('#password').val('');
					$('#confPassword').focus();
					$('#correctMsgDiv').text('');
					errors.push({fieldId:"cbolui_onboard_confPassword", error:confirmPwdEmptyMsg});
					citiResponsive.utils.renderFieldErrors(errors);
					//$('.cbolui-form-fieldset').removeClass('validation-input-danger');
						$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
					}
					else if(($.trim($('#password').val())=='') && ($('#cbolui_onboard_confPassword').val()!='')){
						for(var i = 0; i<validationRules.length; i++){
						validationRules[i].isValid = 'FALSE';
					}
						errors.push({fieldId:"password", error:''});
						citiResponsive.utils.renderFieldErrors(errors);
						$('#password-error-text').remove();
						$('#password_tooltip').click();
						$('#password').val('');
						$('#cbolui_onboard_confPassword').val('');
						$('#correctMsgDiv').text('');
						$('div .passwordRuleMeterToolTip-initialStatusText').text(passwordErrMsg);
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
						$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
						
						}
					else if($('#password').val()!= $('#cbolui_onboard_confPassword').val() ){
					
					citiResponsive.passwordRuleMeter.updateJsonbyIsvalidBlanck();
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
						$('#cbolui_onboard_confPassword').focus();
						$('#password').val('');
						$('#cbolui_onboard_confPassword').val('');
						$('#correctMsgDiv').text('');
						errors.push({fieldId: 'cbolui_onboard_confPassword', error: paswdNotMatchMsg});
						citiResponsive.utils.renderFieldErrors(errors);
						//$('.cbolui-form-fieldset').removeClass('validation-input-danger');
						$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
					}
					else {
						$('#correctMsgDiv').text('');
						$('#password').val('');
						$('#cbolui_onboard_confPassword').val('');
						$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
					}
					
					
					}
					else{
						if($.trim($('#cbolui_onboard_confPassword').val())=='' && $.trim($('#password').val())=='' ){
						
						for(var i = 0; i<validationRules.length; i++){
						validationRules[i].isValid = 'FALSE';
					}
					
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
						errors.push({fieldId:"cbolui_onboard_confPassword", error:confirmPwdEmptyMsg});
						errors.push({fieldId:"password", error:''});
						citiResponsive.utils.renderFieldErrors(errors);
						$('#password_tooltip').click();
						$('div .passwordRuleMeterToolTip-initialStatusText').text(passwordErrMsg);
						$('#password-error-text').remove();
						//$('.cbolui-form-fieldset').removeClass('validation-input-danger');
						$('#password').val('');
						$('#cbolui_onboard_confPassword').val('');
						$('#correctMsgDiv').text('');
						$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
						
					}
					else if($.trim($('#cbolui_onboard_confPassword').val())==''){
					citiResponsive.passwordRuleMeter.updateJsonbyIsvalidBlanck();
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
					$('#password').val('');
					$('#confPassword').focus();
					$('#correctMsgDiv').text('');
					errors.push({fieldId:"cbolui_onboard_confPassword", error:confirmPwdEmptyMsg});
					citiResponsive.utils.renderFieldErrors(errors);
					//$('.cbolui-form-fieldset').removeClass('validation-input-danger');
					$('#password').removeClass('redBorder');
					$('#errorPassMsgDiv').empty();
						
					}
					else if(($.trim($('#password').val())=='') && ($('#cbolui_onboard_confPassword').val()!='')){
						for(var i = 0; i<validationRules.length; i++){
						validationRules[i].isValid = 'FALSE';
					}
						errors.push({fieldId:"password", error:''});
						citiResponsive.utils.renderFieldErrors(errors);
						$('#password-error-text').remove();
						$('#password_tooltip').click();
						$('#password').val('');
						$('#cbolui_onboard_confPassword').val('');
						$('#correctMsgDiv').text('');
						$('div .passwordRuleMeterToolTip-initialStatusText').text(passwordErrMsg);
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
					$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
						
						}
					else if($('#password').val() != $('#cbolui_onboard_confPassword').val() ){
					citiResponsive.passwordRuleMeter.updateJsonbyIsvalidBlanck();
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
						$('#cbolui_onboard_confPassword').focus();
						$('#password').val('');
						$('#cbolui_onboard_confPassword').val('');
						$('#correctMsgDiv').text('');
						errors.push({fieldId: 'cbolui_onboard_confPassword', error: paswdNotMatchMsg});
						citiResponsive.utils.renderFieldErrors(errors);
						//$('.cbolui-form-fieldset').removeClass('validation-input-danger');
						$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
					}
					
					else{
					if(errors.length==0){
						if(citiResponsive.utils.responsiveBoolean()){
							window.scrollTo(0, 0);
						}
						submitByFormIdForOnlineAccess('createUserIdForm');
						}				
					}
					}
					
					//*setTimeout(function(){
					$('#userID-error-text').css('clear','both');	
					//},0);
				
					if(citiResponsive.utils.responsiveBoolean()){
						citiResponsive.utils.setUpJampinit("#pageWrapper", true, ((window.screen.availHeight * 50)/100 + 'px').toString(), false, "");
					}else{
						citiResponsive.utils.setUpJampinit("#pageWrapper", true, "", false, "");
					}
					
				});
				$('#switch-toggle').change(function () {
					if ($(this).is(":checked")) {
						$("#paperLessComm").show();
						$('#paperlessOption-error-text').empty();
						$('#paperlessOption').prop('checked',false);
					} else {
						$('.cbolui-form-fieldset').removeClass('validation-input-danger');
						$("#paperLessComm").hide();

					}
				});
				citiResponsive.leaveConfirmation.leaveConfirmationinit($('#elseWhereText').html());
		}
		else if (pageName === 'activateAuthUser') {
			citiResponsive.utils.initializeAccordion('authUserList');
			citiResponsive.utils.attachTooltips('appBody');
			
			$('#authUserList').on('click','button.cbolui-responsive-tooltip-icon',function(e){
				e.preventDefault();
				e.stopPropagation();
			});
			
			//disable cut, copy, paste on confirm email field
			$('#authUserList').on("cut copy paste",'input[id^="reEnterEmail_"],input[id^="email_"]',function(e) {
				e.preventDefault();
			});
			
			//------------------Manipulation of Accordian Style for Mibile View------------------------
			if (window.screen.availWidth < 780) {
				$('.category').each(function() {
					var htmlTotal = $('#' + this.id).html();
					var carretIconSVG = "";
					var htmlCaption = "";

					if (htmlTotal.indexOf("<svg class=\"accordion-right\"></svg>") > -1) {
						htmlTotal = htmlTotal.replace("<svg class=\"accordion-right\"></svg>", "");
						carretIconSVG = "<div class=\"pull-left\"><svg class=\"accordion-right\"></svg></div>";
					} else if (htmlTotal.indexOf("<svg class=\"\"></svg>") > -1) {
						htmlTotal = htmlTotal.replace("<svg class=\"\"></svg>", "");
						carretIconSVG = "<div class=\"pull-left\"><svg class=\"\"></svg></div>";
					}

					var htmlCaptionInner = $('#' + this.id).find('.pull-right-big').html();
					if (htmlCaptionInner !== null) {
						htmlCaption = "<div class=\"pull-right-big\">" + htmlCaptionInner + "</div>";
					}

					var userName = htmlTotal.replace(htmlCaption, "");

					var v = carretIconSVG + "<div class=\"padLeft25\">" + userName + "</div>" + htmlCaption;
					$('#' + this.id).html(v);
				});
			}
			//------------------Manipulation of Accordian Style for Mibile View------------------------
			
			var $authUserList = $('#authUserList');
			//add event listeneres of check boxes to show/hide email or spendlimit input fields
			$authUserList.on('change','input[id^="grantAccess_"],input[id^="setLimit_"]', function () {
				var $this = $(this);
				var eid = $this.attr('id');
				var randNum = eid.substring(12);
				if (eid.startsWith('grantAccess_')) {
					var emailWrapper = $('#emailWrapper_' + randNum);
					if($this.is(':checked')){
						emailWrapper.removeClass('hidden');
						if($('#email_' + randNum + 'Masked').length === 0){
							$('#email_' + randNum).mask();
							$('#reEnterEmail_' + randNum).mask();
						}
					}else{
						emailWrapper.addClass('hidden');
						emailWrapper.find('input').each(function(){
							$(this).val($(this).val()+' ').trigger('change').val('');
						});
					}
				}else if (eid.startsWith('setLimit_')) {
					var index = eid.substring(9);
					var spendLimitWrapper = $('#spendLimitWrapper_' + index);
					if($this.is(':checked')){
						spendLimitWrapper.removeClass('hidden');
					}else{
						spendLimitWrapper.addClass('hidden');
						var  defaultlimit = $('#defaultlimit_'+index).text(); 
						spendLimitWrapper.find('input').each(function(){
							$(this).val($(this).val()+' ').trigger('change.validation').val(defaultlimit);
						});
					}
				}
			});
			
			//Bring back user configuration if there is any server side validation error
			var intialConfig = parseJSONFromDOMElement('intialConfig');
			if(!$.isEmptyObject(intialConfig)){
				for(var card in intialConfig){
					var configObj = intialConfig[card];
					if(configObj.activateFlag==='true' || configObj.spendLimitFlag==='true' || configObj.grantOnlineAccessFlag==='true'){
						$('#authUser_'+card+' .category').trigger('click.cbolui-accordion');
					}
					if(configObj.activateFlag==='true'){
						$('#actCard_'+card).attr('checked','checked');
					}
					if(configObj.spendLimitFlag==='true'){
						$('#setLimit_'+card).attr('checked','checked');
						$('#spendLimit_'+card).val(configObj.spendLimit);
						$('#spendLimitWrapper_' + card).removeClass('hidden');
					}
					if(configObj.grantOnlineAccessFlag==='true'){
						$('#grantAccess_'+card).attr('checked','checked');
						//$('#email_'+card).val(configObj.email);
						$('#emailWrapper_' + card).removeClass('hidden');
						$('#email_' + card).val(configObj.email).mask();
						$('#reEnterEmail_' + card).mask();
					}
				}
			}
			
			//Attach event to activate all link
			$('#activate_all').on('click',function(){
				$authUserList.find('li').each(function(){
					var actcheck = $(this).find('input[id^="actCard_"]');
					actcheck.attr('checked','checked');
					if( !$(this).hasClass('here')/* && actcheck.length*/){
						$(this).find('.category').trigger('click.cbolui-accordion');
					}
				});	
			});
			
			var validationObj = parseJSONFromDOMElement('validationRule');
			
			//attach event to submit button
			$('#cbolui-useonboa-save').on('click',function(){
				
				validObj = {};
				if(validationObj!=undefined && validationObj!=null && 
						validationObj.email!=undefined && validationObj.email!=null){
					$authUserList.find('input[id^="grantAccess_"]:checked').each(function(){
						var index = $(this).attr('id').substring(12);
						validObj['email_'+index] = validationObj.email;
					});
				}
				
				if(validationObj!=undefined && validationObj!=null && 
						validationObj.spendLimit!=undefined && validationObj.spendLimit!=null){
					$authUserList.find('input[id^="setLimit_"]:checked').each(function(){
						var index = $(this).attr('id').substring(9);
						validObj['spendLimit_'+index] = validationObj.spendLimit;
					});
				}
				
				var  errors = citiResponsive.utils.clientValidationModule.validate(validObj);
				var errorRenderNeeded = false;
				
				//Open all AE acordions which have error fields
				/*for(var i=0; i<errors.length; i++){
					var elid = errors[i].fieldId;
					var index=''; 
					if(elid.startsWith('email_')){
						index = elid.substring(6);
					}else if(elid.startsWith('spendLimit_')){
						index = elid.substring(11);
					}
					if(index !== ''){
						var auel = $('#authUser_'+index+':not(.here)');
						if(auel.length){
							auel.find('.category').trigger('click.cbolui-accordion');
							errorRenderNeeded = true;
						}
					}
				}*/
				
				//Open all AE acordions which were updated
				$authUserList.find('li').each(
					function(){
						var card_el = $(this).find('div[id^="cardNumber_"]');
						if(card_el.length > 0){
							var index = card_el.text();
							var auel = $('#authUser_'+index+':not(.here)');
							if(auel.length && ( $('#actCard_'+index).is(':checked') || $('#setLimit_'+index).is(':checked') || $('#grantAccess_'+index).is(':checked') ) ){
								auel.find('.category').trigger('click.cbolui-accordion');
								errorRenderNeeded = true;
							}
						}	
					}
				);
				
				//Validate confirm email
				$authUserList.find('input[id^="grantAccess_"]:checked').each(function(){
					var index = $(this).attr('id').substring(12);
					var errmsg = $('#confEmailValErrMsg').text();
					if( $('#email_'+index+':not(.validation-input-danger)').length ){
						if( $('#email_'+index).val() !== $('#reEnterEmail_'+index).val() ){
							errors.push({fieldId:'reEnterEmail_'+index,error:errmsg});
							errorRenderNeeded = true;
						}
					}
				});
					
				//rerender error fields	
				if(errorRenderNeeded){
					citiResponsive.utils.renderFieldErrors(errors);
				}
				
				if(errors.length == 0){
					//Create JSON of user config 
					var auList = {};
					$authUserList.find('li').each(function(){
						var $this = $(this);
						var card_el = $this.find('div[id^="cardNumber_"]');
						if(card_el.length > 0){
							var cardNumber = card_el.text();
							var isAEUpdated = $this.hasClass('here');
							var activation = false, grantAccess = false, setSpendLimit = false;
							var emailAddr = '', ammount = '';
							
								activation = $('#actCard_'+cardNumber).is(':checked');
								grantAccess = $('#grantAccess_'+cardNumber).is(':checked');
								if(grantAccess){
									emailAddr = $('#email_'+cardNumber).val();
								}
								setSpendLimit = $('#setLimit_'+cardNumber).is(':checked');
								if(setSpendLimit){
									ammount = $('#spendLimit_'+cardNumber).val();
								}
							
							auList[cardNumber] =   {"email":emailAddr,
													"spendLimit":ammount,
													"activateFlag":activation+'',
													"spendLimitFlag": setSpendLimit+'',
													"grantOnlineAccessFlag": grantAccess+''};
						}
					});
					
					var auListJSON = escapeSpecialChars(JSON.stringify(auList));
					
					$('#secondaryCardDetailsJson').val(auListJSON );
					submitByFormId('authUserForm');
				}
				
			});
			
			function escapeSpecialChars(jsonString) {
				return jsonString.replace(/[?]/g,'').replace(/["]/g,'&quot;').replace(/\n/g, "\\n").replace(/\r/g, "\\r").replace(/\t/g, "\\t").replace(/\f/g, "\\f");
		
			}
	
			$('#cbolui-useonboa-skipCTA').on('click',function(){
				$('#_eventId').val('skip');	
				submitByFormId('authUserForm');
			});
			citiResponsive.leaveConfirmation.leaveConfirmationinit($('#elseWhereText').html());
		}
		else if (pageName === 'securityBodySection') {
			citiResponsive.utils.attachTooltips('appBody');
			$('#cbolui-security-submit').on('click',function(){
				if(!securityValidation()) {
					if(citiResponsive.utils.responsiveBoolean()){
						window.scrollTo(0, 0);
					}
					// If there is no error then submit form
					submitByFormId('securityBodySectionForm');
				} else {
					// If there is any error then clear hint answer field
					$("#hintAnswer").val('');
				}
			});
			
			$('#securityQuestion0, #securityQuestion1, #securityQuestion2').css('color','#666');

			$("#securityQuestion0 option").each(function()
			{
				if($(this).val() !== ''){
					$(this).css('font-style','normal').css('color','#333');
				}
			});
			
			$("#securityQuestion0").on('change', function(){
				var securityQuestion0 = $("#securityQuestion0 option:selected").val();
				if(securityQuestion0 !== ''){
					$("#securityQuestion0").css('font-style','normal').css('color','#333');
				}else{
					$("#securityQuestion0").css('font-style','italic').css('color','#666');
				}
			});
			
			$("#securityQuestion1 option").each(function()
			{
				if($(this).val() !== ''){
					$(this).css('font-style','normal').css('color','#333');
				}
			});
			
			$("#securityQuestion1").on('change', function(){
				var securityQuestion1 = $("#securityQuestion1 option:selected").val();
				if(securityQuestion1 !== ''){
					$("#securityQuestion1").css('font-style','normal').css('color','#333');
				}else{
					$("#securityQuestion1").css('font-style','italic').css('color','#666');
				}
			});
			
			$("#securityQuestion2 option").each(function()
			{
				if($(this).val() !== ''){
					$(this).css('font-style','normal').css('color','#333');
				}
			});
			
			$("#securityQuestion2").on('change', function(){
				var securityQuestion2 = $("#securityQuestion2 option:selected").val();
				if(securityQuestion2 !== ''){
					$("#securityQuestion2").css('font-style','normal').css('color','#333');
				}else{
					$("#securityQuestion2").css('font-style','italic').css('color','#666');
				}
			});
			
			$("#choosehint option").each(function()
			{
				if($(this).val() !== ''){
					$(this).css('font-style','normal').css('color','#333');
				}
			});
			
			$("#choosehint").on('change', function(){
				var choosehint = $("#choosehint option:selected").val();
				if(choosehint !== ''){
					$("#choosehint").css('font-style','normal').css('color','#333');
				}else{
					$("#choosehint").css('font-style','italic').css('color','#666');
				}
			});
			
			citiResponsive.leaveConfirmation.leaveConfirmationinit($('#elseWhereText').html(), true);
		}
		else if (pageName === 'cardReplacement') {
			var validationRule= $('#validationRule').text();
			var validationObj= $.parseJSON(validationRule);
			$('#loginSubmit').on('click',function(){
				var errors = citiResponsive.utils.clientValidationModule.validate(validationObj);
					if(errors.length==0){
					submitByFormId('cardReplacement');
				}
			});
		citiResponsive.leaveConfirmation.leaveConfirmationinit($('#elseWhereText').html());
		}
		
		else if (pageName === 'adminAccountForm') {
			var validationObj = parseJSONFromDOMElement('validationRule');

			//Set maxlength of card number from alidation rule json object
			setMaxLength(validationObj,['cardNumber','ssn','adminVerifyCode']);

			//Restrict user from entering non numeric characters in card number
			restrictNonNumericChars(['cardNumber','year']);
			
			//cardNumber Formatting
			cardNumber_f = '';
			eventIdentifire = '';
			doFormate = true;
			oldformatFlag = 0;  
			startPos = 0;
			endPos = 0;
			$('#cardNumber').on('keyup', function (e) {
				
				var cardNumber;
				if(eventIdentifire === 'PASTE'){
					cardNumber = cardNumber_f;
				}else{
					cardNumber = $(this).val();
				}
				//Reseting Global Variables
				cardNumber_f = '';
				eventIdentifire = '';
				var formatFlag = parseInt($(this).attr("maxlength"));
				if(formatFlag === 15){ 
					oldformatFlag = formatFlag;
					formatFlag = formatFlag + 2;//For 15 + 2 '-'s 
					$(this).attr("maxlength",formatFlag);
				}
				if(formatFlag === 16){ 
					oldformatFlag = formatFlag;
					formatFlag = formatFlag + 3; //For 16 + 3 '-'s
					$(this).attr("maxlength",formatFlag);
				}
				var elementForPos = document.getElementById('cardNumber');
				startPos = elementForPos.selectionStart;
				endPos = elementForPos.selectionEnd;
				var UFcard = cardNumber.replace(/-/g, '');
				if(oldformatFlag === 16){
					//---------------------Cursor postion Manipulation for '-'--------------------
					if(UFcard.length === 5 && startPos === 5){
						startPos = UFcard.length + 1;
						endPos = UFcard.length + 1;
					}else if(UFcard.length === 9 && startPos === 10){
						startPos = UFcard.length + 2;
						endPos = UFcard.length + 2;
					}else if(UFcard.length === 13 && startPos === 15){
						startPos = UFcard.length + 3;
						endPos = UFcard.length + 3;
					}
					//---------------------Cursor postion Manipulation for '-'--------------------
				}
				if(oldformatFlag === 15){
					//---------------------Cursor postion Manipulation for '-'--------------------
					if(UFcard.length === 5 && startPos === 5){
						startPos = UFcard.length + 1;
						endPos = UFcard.length + 1;
					}else if(UFcard.length === 11 && startPos === 12){
						startPos = UFcard.length + 2;
						endPos = UFcard.length + 2;
					}
					//---------------------Cursor postion Manipulation for '-'--------------------
				}
				var formattedcardNumber = formatter(cardNumber, formatFlag);
				$(this).val(formattedcardNumber);
				elementForPos.selectionStart = startPos;
				elementForPos.selectionEnd = endPos;
			});
			
			$('#cardNumber').on('focusout', function (e) {
				var $this = $(this);
				var cardNumber = $this.val();
				var formatFlag = parseInt($this.attr("maxlength"));
				if(cardNumber !== ''){
					var formattedcardNumber = formatter(cardNumber, formatFlag);
					$this.val(formattedcardNumber);
					$this.trigger('change.validation');
				}
			});
			
		   	$('#useonboa-adminAccount-submit').on('click', function () {
				validObj = $.extend({}, validationObj);
				var dobValidationRule = validObj.dateOfBirth;
				delete validObj.dateOfBirth;
				

				//Apply validation only on raw card number
				var $cardNumber = $('#cardNumber'); 
				var cardNumber = $cardNumber.val();
				var rawCardNumber = cardNumber.replace(/-/g , '');
				$cardNumber.val(rawCardNumber);

				var  errors = citiResponsive.utils.clientValidationModule.validate(validObj);

				var dobValidation = false;

				if(dobValidationRule != undefined && 
					dobValidationRule.clientValidationRequired !== null && 
					dobValidationRule.clientValidationRequired === true &&
					dobValidationRule.mandatoryValidation !== null && 
					dobValidationRule.mandatoryValidation.clientValidation === true
					){
					var day = $('#day').val();
					var month = $('#month').val();
					var year = $.trim( $('#year').val() );
					if(day === '0' || month === '0' || year === ''){
						errors.push({fieldId:'dateOfBirth',error:dobValidationRule.mandatoryValidation.errorMessage})
						dobValidation = true;
					}
				}
				if(dobValidation){
					citiResponsive.utils.renderFieldErrors(errors);
				}
				if(errors.length == 0){
					//--------To get back value of year field from masking------------------------------
					$("#year").val(yeartxt);
					var yearStared = '';
					for(var i = 0; i < yeartxt.length; i++){
						yearStared = yearStared + maskOptions.dob.maskingChar;
					}
					$("#year").addClass('cbolui-hidden');
					$("#year").after('<input type="text" maxlength="4" class="form-control" id="yearMasked" name="yearMasked" value="' + yearStared + '">');
					//--------To get back value of year field from masking------------------------------
					if(citiResponsive.utils.responsiveBoolean()){
						window.scrollTo(0, 0);
					}
					submitByFormId('adminAccountForm');
				}else{
					$cardNumber.val(cardNumber);
				}
			});
			
			//----------------------------DOB Masking--------------------------
			monthval = '';
			monthtxt = '';
			dayval = '';
			daytxt = '';
			yeartxt = $('#year').val();
			if(parent.dobMasking === true){
				if(typeof maskOptions !== "undefined"){
					if(maskOptions.dob.maskingOption === "true"){
						
						$('#month').on('focus mousedown keydown', function () {
							if($('#year').val() !== ''){
								if($('#year').val().indexOf(maskOptions.dob.maskingChar) === -1){
									yeartxt = $('#year').val();
								}
							}
							unMask();
						});
						
						$('#month').on('blur', function () {
							DOBMask();								
						});
						
						$('#day').on('focus mousedown keydown', function () {
							if($('#year').val() !== ''){
								if($('#year').val().indexOf(maskOptions.dob.maskingChar) === -1){
									yeartxt = $('#year').val();
								}
							}
							unMask();
						});
						
						$('#day').on('blur', function () {
							DOBMask();								
						});
						
						$('#year').on('focus', function () {
							if(yeartxt !== $.trim($("#year").val())){
								unMask();
							}
						});
						
						$('#year').on('blur', function () {
							DOBMask();	
						});
					}
				}
			}
			
			function DOBMask(){
				
				var decisionTomask = false;
				var monthFocus =  $('#month').is(':focus');
				var dayFocus = $('#day').is(':focus');
				var yearFocus = $('#year').is(':focus');
				if(monthFocus === false && dayFocus === false && yearFocus === false){
					decisionTomask = true;
				}
				
				monthval = $.trim($('select#month option:selected').val());
				monthtxt = $.trim($('select#month option:selected').text());
				dayval = $.trim($('select#day option:selected').val());
				daytxt = $.trim($('select#day option:selected').text());
				yeartxt = $('#year').val();
				if(monthtxt !== '' && monthval !== '0' && dayval !== '0' && daytxt !== '' && yeartxt.length === 4 && decisionTomask){
					var monthStar = staring(monthtxt,maskOptions.dob.maskingChar);
					$("#month option[value='" + monthval + "']").text(monthStar);
					$("#month").removeClass('validation-input-danger');
					var dayStar = staring(daytxt,maskOptions.dob.maskingChar);
					$("#day option[value='" + dayval + "']").text(dayStar);
					$("#day").removeClass('validation-input-danger');
					var yearStar = staring(yeartxt,maskOptions.dob.maskingChar);
					$("#year").val(yearStar);
					$("#year").removeClass('validation-input-danger');
				}
			}
			
			function unMask(){
				if( $("#month option[value='" + monthval + "']").text().indexOf(maskOptions.dob.maskingChar) !== -1){
					$("#month option[value='" + monthval + "']").text(monthtxt);
					$("#day option[value='" + dayval + "']").text(daytxt);
					$("#year").val(yeartxt);
					var eleYear = document.getElementById('year');
			        eleYear.selectionStart = yeartxt.length;
			        eleYear.selectionEnd = yeartxt.length;
				}
			}
			
			
			function staring(str, maskingChar){
				var Star = '';
				for(var i = 0; i < str.length; i++){
					Star = Star + maskingChar;
				}
				return Star;
			}
			//----------------------------DOB Masking--------------------------
			
			$("#month option").each(function()
			{
				if($(this).val() !== 0){
					$(this).css('font-style','normal').css('color','#333');
				}
			});
			$("#month").on('change', function(){
				var montVal = $("#month option:selected").val();
				if(montVal > 0){
					$("#month").css('font-style','normal').css('color','#333');
				}else{
					$("#month").css('font-style','italic').css('color','#666');
				}
			});
			$("#day option").each(function()
			{
				if($(this).val() !== 0){
					$(this).css('font-style','normal').css('color','#333');
				}
			});
			$("#day").on('change', function(){
				var dayVal = $("#day option:selected").val();
				if(dayVal > 0){
					$("#day").css('font-style','normal').css('color','#333');
				}else{
					$("#day").css('font-style','italic').css('color','#666');
				}
			});
			
		    citiResponsive.utils.attachTooltips('appBody');
		    if(citiResponsive.utils.responsiveBoolean()){
				citiResponsive.utils.setUpJampinit("#pageWrapper", true, ((window.screen.availHeight * 50)/100 + 'px').toString(), false, "");
			}else{
				citiResponsive.utils.setUpJampinit("#pageWrapper", true, "", false, "");
			}
		    citiResponsive.leaveConfirmation.leaveConfirmationinit($('#elseWhereText_Adm').html());
		}
		
		else if (pageName === 'onlineAccessAdminForm') {
			
			var validationObj= $('#validationJson').text();
			validationObj= $.parseJSON(validationObj);
			setMaxLength(validationObj,['mobileNo']);
			
			//Restrict user from entering non numeric characters in card number
			restrictNonNumericChars(['mobileNo']);
			
			//---------------------Phone Number formatting------------------------
			mobileNo_f = '';
			eventIdentifire = '';
			oldPhformatFlag = 0;
			phstartPos = 0;
			phendPos = 0;
			$('#mobileNo').on('keyup', function (e) {
				var mobileNo;
				if(eventIdentifire === 'PASTE'){
					mobileNo = mobileNo_f;
				}else{
					mobileNo = $(this).val();
				}
				//Reseting Global Variables
				mobileNo_f = '';
				eventIdentifire = '';
				var formatFlag = parseInt($(this).attr("maxlength"));
				if(formatFlag === 10){ 
					oldPhformatFlag = formatFlag;
					formatFlag = formatFlag + 4;//For 10 & 2 '-' s & 1 '(' & 1 ')'
					$(this).attr("maxlength",formatFlag);
				}
				var sidekeyCodeArr = [ 37, 39];//left, Right Keys
				var delkeyCodeArr = [ 8, 46];//BackSpace, Delete Keys
				var evt = e || window.event;
				var elementForPos = document.getElementById('mobileNo');
				phstartPos = elementForPos.selectionStart;
				phendPos = elementForPos.selectionEnd;
				var UFmobileNo = mobileNo.replace(/-/g, '').replace('(', '').replace(')', '');
				if(oldPhformatFlag === 10){
					//---------------------Cursor postion Manipulation for '-'--------------------
					if(UFmobileNo.length === 3 && phstartPos === 3){
						phstartPos = UFmobileNo.length + 2;
						phendPos = UFmobileNo.length + 2;
					}else if(UFmobileNo.length === 4 && phstartPos === 4){
						phstartPos = UFmobileNo.length + 3;
						phendPos = UFmobileNo.length + 3;
					}else if(UFmobileNo.length === 4 && phstartPos === 6){
						if($.inArray(evt.keyCode, sidekeyCodeArr) === -1){
							phstartPos = UFmobileNo.length + 4;
							phendPos = UFmobileNo.length + 4;
						}else{
							phstartPos = UFmobileNo.length + 2;
							phendPos = UFmobileNo.length + 2;
						}
					}else if(UFmobileNo.length === 7 && phstartPos === 10){
						if($.inArray(evt.keyCode, sidekeyCodeArr) === -1){
							if($.inArray(evt.keyCode, delkeyCodeArr) === -1){
								phstartPos = UFmobileNo.length + 5;
								phendPos = UFmobileNo.length + 5;
							}
						}
					}else if(UFmobileNo.length === 8 && phstartPos === 10){
						if($.inArray(evt.keyCode, sidekeyCodeArr) === -1){
							if($.inArray(evt.keyCode, delkeyCodeArr) === -1){
								phstartPos = UFmobileNo.length + 3;
								phendPos = UFmobileNo.length + 3;
							}
						}
					}
					//---------------------Cursor postion Manipulation for '-'--------------------
				}
				var formattedmobileNo = mobileNoformatter(mobileNo, formatFlag);
				$(this).val(formattedmobileNo);
				elementForPos.selectionStart = phstartPos;
				elementForPos.selectionEnd = phendPos;
			});
			
			$('#mobileNo').on('focusout', function (e) {
				var $this = $(this);
				mobileNo = $this.val();
				var formatFlag = parseInt($this.attr("maxlength"));
				if(mobileNo !== ''){
					var formattedmobileNo = mobileNoformatter(mobileNo, formatFlag);
					$this.val(formattedmobileNo);
					$this.trigger('change.validation');
				}
			});
			
				$("#userID").blur(function(){
				var text=$(this).val();
				$(this).val($.trim(text));
			});
			var validationOn=false;
			var validationOff=false;
			
			passwordJson= validationObj.password;
			var passwordErrMsg= passwordJson.mandatoryValidation.errorMessage;
			
			delete validationObj.password;

			citiResponsive.utils.attachTooltips('userIdWrapper','top');
			citiResponsive.utils.attachTooltips('phoneNumWrapper','top');
			//Check availabilty
			$("#Input_AvalabilityLink").off('click').on('click',function(){
				citiResponsive.utils.setUpJampinit("#pageWrapper", false, '', false, scrollToTopFunc);
				//citiResponsive.utils.renderFieldErrors([]);
				validationOff=true;
				hideUserIdList();
				if($('#userID').val() != ''){
					submitByFormIdForCheckAvailability('onlineAccessAdminForm');	
				}else{
					$('#userID').blur();
					$("#addCheckClass").tmpl().appendTo($("#checkAvail").empty());
					$("#avalabilityOptionDisplay").removeClass('hidden');
					if(validationOn==false) {
						$("#availabilityMessage1").removeClass('hidden');
						
						$('#errorTextForAvail').text(userIdEmptyMsg);
					}
					citiResponsive.passwordRuleMeter.init();
				}
				
				function scrollToTopFunc(){
					if($("#Input_AvalabilityLink").length > 0 ){
						var vTop = $("#Input_AvalabilityLink").offset().top;
						vTop = (vTop - 50);
						window.scrollTo(0,vTop);
					}
				}

			});
			
			$('#useonboa-cbolui-onlineAdminSubmit').off('click').on('click', function () {
				validationOn=true;
				$('#pageLevelErrDiv').empty();
				
				//$("#addCheckClass").tmpl().appendTo($("#checkAvail").empty());
				if(validationOff==true){
					$("#availabilityMessage1").addClass('hidden');
					$('#errorTextForAvail').text('');
					
				}
				if(isContactInfoAvailable == "false"){
							var phNumberFormatted = $('#mobileNo').val();
							var phNumber = phNumberFormatted.replace(/-/g, '').replace(/\(|\)/g, "");
							$('#mobileNo').val(phNumber);
						}
				var errors = citiResponsive.utils.clientValidationModule.validate(validationObj);
					$("#cbolui_onboard_createUserRadio").attr('checked', 'checked').trigger('click');
					if($('#userID').val()==''){
						$('#checkAvail').empty();
						if($.trim($('#cbolui_onboard_confPassword').val())=='' && $.trim($('#password').val())=='' ){
						
						for(var i = 0; i<validationRules.length; i++){
						validationRules[i].isValid = 'FALSE';
					}
					
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
						errors.push({fieldId:"cbolui_onboard_confPassword", error:confirmPwdEmptyMsg});
						errors.push({fieldId:"password", error:''});
						citiResponsive.utils.renderFieldErrors(errors);
						$('#password_tooltip').click();
						$('div .passwordRuleMeterToolTip-initialStatusText').text(passwordErrMsg);
						$('#password-error-text').remove();
						//$('.cbolui-form-fieldset').removeClass('validation-input-danger');
						$('#password').val('');
						$('#cbolui_onboard_confPassword').val('');
						$('#correctMsgDiv').text('');
						$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
						
					}
					else if($.trim($('#cbolui_onboard_confPassword').val())==''){
					citiResponsive.passwordRuleMeter.updateJsonbyIsvalidBlanck();
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
					$('#password').val('');
					$('#confPassword').focus();
					$('#correctMsgDiv').text('');
					errors.push({fieldId:"cbolui_onboard_confPassword", error:confirmPwdEmptyMsg});
					citiResponsive.utils.renderFieldErrors(errors);
					//$('.cbolui-form-fieldset').removeClass('validation-input-danger');
						$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
					}
					else if(($.trim($('#password').val())=='') && ($('#cbolui_onboard_confPassword').val()!='')){
						for(var i = 0; i<validationRules.length; i++){
						validationRules[i].isValid = 'FALSE';
					}
						errors.push({fieldId:"password", error:''});
						citiResponsive.utils.renderFieldErrors(errors);
						$('#password-error-text').remove();
						$('#password_tooltip').click();
						$('#password').val('');
						$('#cbolui_onboard_confPassword').val('');
						$('#correctMsgDiv').text('');
						$('div .passwordRuleMeterToolTip-initialStatusText').text(passwordErrMsg);
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
						$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
						
						}
					else if($('#password').val()!= $('#cbolui_onboard_confPassword').val() ){
					
					citiResponsive.passwordRuleMeter.updateJsonbyIsvalidBlanck();
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
						$('#cbolui_onboard_confPassword').focus();
						$('#password').val('');
						$('#cbolui_onboard_confPassword').val('');
						$('#correctMsgDiv').text('');
						errors.push({fieldId: 'cbolui_onboard_confPassword', error: paswdNotMatchMsg});
						citiResponsive.utils.renderFieldErrors(errors);
						//$('.cbolui-form-fieldset').removeClass('validation-input-danger');
						$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
					}
					else {
						$('#correctMsgDiv').text('');
						$('#password').val('');
						$('#cbolui_onboard_confPassword').val('');
						$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
					}
					
					
					}
					else{
						if($.trim($('#cbolui_onboard_confPassword').val())=='' && $.trim($('#password').val())=='' ){
						
						for(var i = 0; i<validationRules.length; i++){
						validationRules[i].isValid = 'FALSE';
					}
					
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
						errors.push({fieldId:"cbolui_onboard_confPassword", error:confirmPwdEmptyMsg});
						errors.push({fieldId:"password", error:''});
						citiResponsive.utils.renderFieldErrors(errors);
						$('#password_tooltip').click();
						$('div .passwordRuleMeterToolTip-initialStatusText').text(passwordErrMsg);
						$('#password-error-text').remove();
						//$('.cbolui-form-fieldset').removeClass('validation-input-danger');
						$('#password').val('');
						$('#cbolui_onboard_confPassword').val('');
						$('#correctMsgDiv').text('');
						$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
						
					}
					else if($.trim($('#cbolui_onboard_confPassword').val())==''){
					citiResponsive.passwordRuleMeter.updateJsonbyIsvalidBlanck();
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
					$('#password').val('');
					$('#confPassword').focus();
					$('#correctMsgDiv').text('');
					errors.push({fieldId:"cbolui_onboard_confPassword", error:confirmPwdEmptyMsg});
					citiResponsive.utils.renderFieldErrors(errors);
					//$('.cbolui-form-fieldset').removeClass('validation-input-danger');
					$('#password').removeClass('redBorder');
					$('#errorPassMsgDiv').empty();
						
					}
					else if(($.trim($('#password').val())=='') && ($('#cbolui_onboard_confPassword').val()!='')){
						for(var i = 0; i<validationRules.length; i++){
						validationRules[i].isValid = 'FALSE';
					}
						errors.push({fieldId:"password", error:''});
						citiResponsive.utils.renderFieldErrors(errors);
						$('#password-error-text').remove();
						$('#password_tooltip').click();
						$('#password').val('');
						$('#cbolui_onboard_confPassword').val('');
						$('#correctMsgDiv').text('');
						$('div .passwordRuleMeterToolTip-initialStatusText').text(passwordErrMsg);
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
					$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
						
						}
					else if($('#password').val() != $('#cbolui_onboard_confPassword').val() ){
					citiResponsive.passwordRuleMeter.updateJsonbyIsvalidBlanck();
					citiResponsive.passwordRuleMeter.jsonUpdateFailAtValidation = true;
						$('#cbolui_onboard_confPassword').focus();
						$('#password').val('');
						$('#cbolui_onboard_confPassword').val('');
						$('#correctMsgDiv').text('');
						errors.push({fieldId: 'cbolui_onboard_confPassword', error: paswdNotMatchMsg});
						citiResponsive.utils.renderFieldErrors(errors);
						//$('.cbolui-form-fieldset').removeClass('validation-input-danger');
						$('#password').removeClass('redBorder');
						$('#errorPassMsgDiv').empty();
					}
					
					else{
					if(errors.length==0){
						if(citiResponsive.utils.responsiveBoolean()){
							window.scrollTo(0, 0);
						}
						
						submitByFormIdForOnlineAccess('onlineAccessAdminForm');
						}		

				else{
					$('#mobileNo').val(phNumberFormatted);
				}
												
					}
					}
					
					//*setTimeout(function(){
					$('#userID-error-text').css('clear','both');	
					//},0);
				
					if(citiResponsive.utils.responsiveBoolean()){
						citiResponsive.utils.setUpJampinit("#pageWrapper", true, ((window.screen.availHeight * 50)/100 + 'px').toString(), false, "");
					}else{
						citiResponsive.utils.setUpJampinit("#pageWrapper", true, "", false, "");
					}
					
				});
				if(citiResponsive.utils.responsiveBoolean()){
					citiResponsive.utils.setUpJampinit("#pageWrapper", true, ((window.screen.availHeight * 50)/100 + 'px').toString(), false, "");
				}else{
					citiResponsive.utils.setUpJampinit("#pageWrapper", true, "", false, "");
				}
				citiResponsive.leaveConfirmation.leaveConfirmationinit($('#elseWhereText').html());
		}
		
		else if (pageName === 'securityBodySection_ADM') {
			citiResponsive.utils.attachTooltips('appBody');
			$('#cbolui-security-submit_ADM').on('click',function(){
				if(!securityValidation()) {
					if(citiResponsive.utils.responsiveBoolean()){
						window.scrollTo(0, 0);
					}
					// If there is no error then submit form
					submitByFormId('securityBodySectionForAdmin');
				} else {
					// If there is any error then clear hint answer field
					$("#hintAnswer").val('');
				}
			});
			
			$('#securityQuestion0, #securityQuestion1, #securityQuestion2').css('color','#666');

			$("#securityQuestion0 option").each(function()
			{
				if($(this).val() !== ''){
					$(this).css('font-style','normal').css('color','#333');
				}
			});
			
			$("#securityQuestion0").on('change', function(){
				var securityQuestion0 = $("#securityQuestion0 option:selected").val();
				if(securityQuestion0 !== ''){
					$("#securityQuestion0").css('font-style','normal').css('color','#333');
				}else{
					$("#securityQuestion0").css('font-style','italic').css('color','#666');
				}
			});
			
			$("#securityQuestion1 option").each(function()
			{
				if($(this).val() !== ''){
					$(this).css('font-style','normal').css('color','#333');
				}
			});
			
			$("#securityQuestion1").on('change', function(){
				var securityQuestion1 = $("#securityQuestion1 option:selected").val();
				if(securityQuestion1 !== ''){
					$("#securityQuestion1").css('font-style','normal').css('color','#333');
				}else{
					$("#securityQuestion1").css('font-style','italic').css('color','#666');
				}
			});
			
			$("#securityQuestion2 option").each(function()
			{
				if($(this).val() !== ''){
					$(this).css('font-style','normal').css('color','#333');
				}
			});
			
			$("#securityQuestion2").on('change', function(){
				var securityQuestion2 = $("#securityQuestion2 option:selected").val();
				if(securityQuestion2 !== ''){
					$("#securityQuestion2").css('font-style','normal').css('color','#333');
				}else{
					$("#securityQuestion2").css('font-style','italic').css('color','#666');
				}
			});
			
			$("#choosehint option").each(function()
			{
				if($(this).val() !== ''){
					$(this).css('font-style','normal').css('color','#333');
				}
			});
			
			$("#choosehint").on('change', function(){
				var choosehint = $("#choosehint option:selected").val();
				if(choosehint !== ''){
					$("#choosehint").css('font-style','normal').css('color','#333');
				}else{
					$("#choosehint").css('font-style','italic').css('color','#666');
				}
			});
			
			citiResponsive.leaveConfirmation.leaveConfirmationinit($('#elseWhereText_ADM').html(), true);
		}
		
	
	}

	function securityValidation() {
		var invalidFields = new Array();
		var errFlag = false;
		if(($('#securityQuestion0').is(':visible'))==true){ 
		if($('#securityQuestion0').val() === '') {
			invalidFields.push({fieldId:'securityQuestion0', error: secQuesMandErrMsg}); 
			errFlag = true;
		}
		}
		if(($('#answer0,#answer0Masked').is(':visible'))==true){ 
		if($.trim($('#answer0').val()) === '') {
			invalidFields.push({fieldId:'answer0', error: secAnsEmptyErrMsg}); 
			errFlag = true;
		}
		}
		if(($('#securityQuestion1').is(':visible'))==true){ 
		if($('#securityQuestion1').val() === '') {
			invalidFields.push({fieldId:'securityQuestion1', error: secQuesMandErrMsg});
			errFlag = true;
		}
		}
		if(($('#answer1,#answer1Masked').is(':visible'))==true){ 
		if($.trim($('#answer1').val()) === '') {
			invalidFields.push({fieldId:'answer1', error: secAnsEmptyErrMsg}); 
			errFlag = true;
		}
		}
		if(($('#securityQuestion2').is(':visible'))==true){
		if($('#securityQuestion2').val() === '') {
			invalidFields.push({fieldId:'securityQuestion2', error: secQuesMandErrMsg});
			errFlag = true;
		}
		}
		if(($('#answer2,#answer2Masked').is(':visible'))==true){ 
		if($.trim($('#answer2').val()) === '') {
			invalidFields.push({fieldId:'answer2', error: secAnsEmptyErrMsg}); 
			errFlag = true;
		}
		}
		if(($('#choosehint').is(':visible'))==true){ 
		if($('#choosehint').val() === '') {
			invalidFields.push({fieldId:'choosehint', error: secHintMandErrMsg}); 
			errFlag = true;
		}
		}
		if(($('#hintAnswer').is(':visible'))==true){ 
		if($.trim($('#hintAnswer').val()) === '') {
			invalidFields.push({fieldId:'hintAnswer', error: secWordEmptyErrMsg}); 
			errFlag = true;
		}
		}
		
		citiResponsive.utils.renderFieldErrors(invalidFields);
		return errFlag;
	}
	
	function submitByURLParam(URL) {
		$.ajax({
			url : URL,
			type : "POST",
			dataType : "html",
			success : function (data, status, jqXHR) {
				$('#appBody').html(data);
			},
			error : function (jqXHR, textStatus, errorThrown) {
				$('#appBody').html(jqXHR.responseText);
			}
		});
	}

	function submitByFormId(formId) {
		var targetUrl = contextPath + "/CBOL/sec/useonboa/flow.action?jfp.layout=AppBodyAndFAQ";
		$.ajax({
			url : targetUrl,
			type : 'post',
			data : $('#' + formId).serialize(),
			async : true,
			success : function (data) {
				$('#appBody').html(data);
			},
			error : function (jqXHR, textStatus, errorThrown) {
				$('#appBody').html(jqXHR.responseText);
			}
		});
	}

	function submitByFormForLinkUser(formId){
       	var a= $("#createUserIdForm input[type='radio']:checked").attr('id').split('_');
		var b= "dynamicTextBox_"+a[1];
		var pass=$('#'+b).find('input:#[id^=cbolui_onboard_existingPassword_]').val();
		var paperlessSelection=false;
				if ($('#switch-toggle').is(":checked")) {
					paperlessSelection=true;
				} else {
					paperlessSelection=false;
				}
			var flowExeKey= $('#_flowExecutionKey').val();
			var eventId='link';
			var userId= $("#createUserIdForm input[type='radio']:checked").val()
			var radioSelected=a[1];
			var params = { 
					_flowExecutionKey : flowExeKey,
					_eventId : eventId,
					userId: userId,
					paperlessSelection: paperlessSelection,
					password: pass,
					radioSelected: radioSelected
		   };
               
        var targetUrl = contextPath+"/CBOL/sec/useonboa/flow.action";
            jQuery.ajax({
            url: targetUrl,
            type: 'post',
            data: jQuery.param(params),
            async: true,
            success : function(data, status, jqXHR) {
            	if ((jqXHR.getResponseHeader("content-type") != null &&
            			jqXHR.getResponseHeader("content-type").indexOf('json') > -1)) {
            		data = citiResponsive.utils.handleRBAResponse(data, jqXHR, contextPath + data.ajaxURL);
            		if (data.indexOf('otpinOverlay321968') == -1 && data.indexOf('secWordChallengeOverlay040210') == -1) {
            			jQuery('#appBody').html("");
            			jQuery('#appBody').html(data);
            		}

            	}else{
            		jQuery('#appBody').html(data);
            		if(paperlessSelection==true){
                        $('#switch-toggle').prop("checked",true);
                        $("#paperLessComm").show(); 
                      }
                      else{ 
                        $('#switch-toggle').prop("checked",false);
                        $("#paperLessComm").hide(); 
                      } 
            	}
            },
            error : function(jqXHR, textStatus, errorThrown){
                $('#appBody').html(jqXHR.responseText);
        	}
        });
    }



	function submitByFormIdForOnlineAccess(formId) {
		var targetUrl = contextPath + "/CBOL/sec/useonboa/flow.action?jfp.layout=AppBodyAndFAQ";
		$("#userID").attr("disabled",false);
		$.ajax({
			url : targetUrl,
			type : 'post',
			data : $('#' + formId).serialize(),
			async : true,
			success : function (data) {
			
				//$('#storeUserIdData').html(data);
				var xyz = "fieldErrorLength=";
				var sp = data.search(xyz);
				sp = sp + xyz.length;
				var fieldErrorLength = data.charAt(sp);
				if(data.indexOf('otpinOverlay321968') == -1 && data.indexOf('otpinOverlay321969') == -1 
						&& data.indexOf('secWordChallengeOverlay040210') == -1 && fieldErrorLength == '0' && $(data).filter('#json').length > 0 && $(data).filter('#json').text()!= ''){
				//if(availabilityJson!=''){
					var cardJSON =JSON.parse($(data).filter('#json').text());
					var errorOnUserID=[];
					if(cardJSON!='' && cardJSON.userIdAvailable==false && cardJSON !== null){
						$('#stcCode').val("");
						debugger
						$('#commonPageLevelError').remove();
						citiResponsive.utils.renderFieldErrors([]);
						/*if(userIdFieldError != ''){
								hideUserIdList();
								$("#avalabilityOptionDisplay").removeClass('cM-hide');
								$("#availabilityMessage").removeClass('cM-hide').text(userIdFieldError);
								$('#setupNewUserIdValueMasked').trigger('focus');
							else{*/
						//var cardJSON =$.parseJSON(availabilityJson);
							if(paperlessSelection=="true"){
								$('#switch-toggle').prop("checked",true);
								$("#paperLessComm").show();					
							}
							else{	
								$('#switch-toggle').prop("checked",false);
								$("#paperLessComm").hide();					
							} 
						var listOfUserIds = cardJSON.suggestedUserIds; 	
						var availablityMsg = cardJSON.availabilityMessage;
						$("#addCheckClass").tmpl().appendTo($("#checkAvail").empty());
						if(availablityMsg == null){
							availablityMsg = "";
						}
						var numerOfAttemptsExceded = cardJSON.attemptsExceeded;
						var searchableStr = "suggst='";
						var startPosition = data.search(searchableStr);
						startPosition = startPosition + 8;
						var result = data.charAt(startPosition).toUpperCase();
						suggst =  (result === 'T') ? "true" : "false";
						debugger
						if(listOfUserIds != '' && listOfUserIds != null && suggst=="false"){	
							setTimeout(function(){
								showUserIdList(listOfUserIds);
								$('#userID').blur();
								//$("#availabilityMessage").text(availablityMsg);
								$("#availabilityMessage2").addClass('hidden');
								$("#availabilityMessage1").removeClass('hidden');
								$("#errorTextForAvail").html(availablityMsg);
								//$('#setupNewUserIdValueMasked').trigger('focus');	
								if(numerOfAttemptsExceded){
									citiResponsive.passwordRuleMeter.init();
									displayPageLevelError(availablityMsg);	
								}
							},0);
							
						}
						else if(suggst=="false"){
							$('#userID').blur();
							$("#availabilityMessage2").addClass('hidden');
							//$("#availabilityMessage1").removeClass('hidden');
							errorOnUserID.push({fieldId:'userID',error:availablityMsg})
							citiResponsive.utils.renderFieldErrors(errorOnUserID);
						}
						else{
							if((listOfUserIds == '' || listOfUserIds == null) && (availablityMsg != "" || availablityMsg != null) && suggst=="true"){ 
								$('#userID').blur();
								$("#avalabilityOptionDisplay").removeClass('hidden');	
								//$("#availabilityMessage").removeClass('hidden').text(availablityMsg);
								$("#availabilityMessage1").addClass('hidden');
								$("#availabilityMessage2").removeClass('hidden');
								$("#successMsg").html(availablityMsg);
								//$('#setupNewUserIdValueMasked').trigger('focus');
							}
						}
						/*if(hasError==true){
						  $('#checkAvail').empty();
						  hasError=false;
						}*/
					}
					else{
						$('#appBody').html($('#storeUserIdData').html());
					}
				//}
			}
				else if(data.indexOf('otpinOverlay321968') == -1 
						&& data.indexOf('otpinOverlay321969') == -1 && data.indexOf('secWordChallengeOverlay040210') == -1){
					/*var securityPage = $('#storeUserIdData').children();
					$('#appBody').html('');
					securityPage.appendTo('#appBody');*/
					$('#appBody').html(data);
                    if(paperlessSelection=="true"){
                    	$('#switch-toggle').prop("checked",true);
			            $("#paperLessComm").show();        											                                                         
			        }
			        else{      
			            $('#switch-toggle').prop("checked",false);
			            $("#paperLessComm").hide();                                                                   
			        } 

				}else{
					citiResponsive.leaveConfirmation.unbindLeaveConfirmation(false, $('#elseWhereText').html());
				}
			},
			error : function (jqXHR, textStatus, errorThrown) {
				$('#appBody').html(jqXHR.responseText);
			}
		});
	}


	function submitByFormIdForCheckAvailability(formId) { 
		var targetUrl = contextPath + "/CBOL/sec/useonboa/flow.action";
		var paperlessSelection=false;
		var postEvent="checkAvailability";
		if ($('#switch-toggle').is(":checked")) {
			paperlessSelection=true;
		} else {
			paperlessSelection=false;
		}
		if(isAdminFlow=="true"){
			 postEvent= "checkAvailabilityAdm"; 
			}
		$.ajax({
			url : targetUrl,
			type : 'post',
			data: {
				"userID":$('#userID').val(),
				"paperlessSelection":paperlessSelection,
				"_eventId":postEvent,
				"_flowExecutionKey":$('#_flowExecutionKey').val()
			},
			async : true,
			success: function (data, status, jqXHR) {
				//$('#storeUserIdData').html(data);
				if( data.search("key='userID'") > 0){
					var si = data.search("var msg='");
					var tempdata = data.substr(si+9);
					var errmsg = tempdata.substr(0,tempdata.search("'") );
					$("#password").val("");
					$("#cbolui_onboard_confPassword").val("");
					citiResponsive.utils.renderFieldErrors([{fieldId:'userID',error:errmsg}]);
				}
				else{
					citiResponsive.utils.renderFieldErrors([]);
					$('#commonPageLevelError').remove();
					availabilityJson = $(data).filter('#json').html();
					var searchableStr = "suggst='";
					var startPosition = data.search(searchableStr);
					startPosition = startPosition + searchableStr.length;
					var result = data.charAt(startPosition).toUpperCase();
					suggst = (result === 'T') ? "true" : "false";
					
					$('#pageLevelErrDiv').empty();
					$('#userID-error-text').empty();
					//if(availabilityJson!=''){
					availabilityJson = availabilityJson.replace(/\&quot;/g, '"');
					var errorOnUserID=[];
					var cardJSON =$.parseJSON(availabilityJson);
					if(cardJSON !== null){
						if(paperlessSelection==true){
							$('#switch-toggle').prop("checked",true);
							$("#paperLessComm").show();					
						}
						else{	
							$('#switch-toggle').prop("checked",false);
							$("#paperLessComm").hide();					
						}
					
						var listOfUserIds = cardJSON.suggestedUserIds; 	
						var availablityMsg = cardJSON.availabilityMessage;
						$("#addCheckClass").tmpl().appendTo($("#checkAvail").empty());
						if(availablityMsg == null){
							availablityMsg = "";
						}
						var numerOfAttemptsExceded = cardJSON.attemptsExceeded;
					}
					if(listOfUserIds != '' && listOfUserIds != null && suggst=="false"){	
						showUserIdList(listOfUserIds);
	
						$('#userID').blur();
						//$("#availabilityMessage").text(availablityMsg);
						$("#availabilityMessage2").addClass('hidden');
						$("#availabilityMessage1").removeClass('hidden');
						$("#errorTextForAvail").html(availablityMsg);
						//$('#setupNewUserIdValueMasked').trigger('focus');	
						if(numerOfAttemptsExceded){
							citiResponsive.passwordRuleMeter.init();
							displayPageLevelError(availablityMsg);	
						}
					}
					else if(suggst=="false"){
						$('#userID').blur();
						$("#availabilityMessage2").addClass('hidden');
						//$("#availabilityMessage1").removeClass('hidden');
						errorOnUserID.push({fieldId:'userID',error:availablityMsg})
						citiResponsive.utils.renderFieldErrors(errorOnUserID);
					}
					else{
						if((listOfUserIds == '' || listOfUserIds == null) && (availablityMsg != "" || availablityMsg != null) && suggst=="true"){ 
							$('#userID').blur();
							$("#avalabilityOptionDisplay").removeClass('hidden');	
							//$("#availabilityMessage").removeClass('hidden').text(availablityMsg);
							$("#availabilityMessage1").addClass('hidden');
							$("#availabilityMessage2").removeClass('hidden');
							$("#successMsg").html(availablityMsg);
							//$('#setupNewUserIdValueMasked').trigger('focus');
							}
						}
					if(hasError==true){
					$('#checkAvail').empty();
					hasError=false;
					}
				}
			},
			error : function (jqXHR, textStatus, errorThrown) {
				$('#appBody').html(jqXHR.responseText);
			}
		});
	}
	function hideUserIdList(){
		$("#avalabilityOptionDisplay").addClass('hidden');
		$("#availabilityMessage").addClass('hidden');
		$("#availabilityOptions").addClass('hidden');
		$("#cardPageLevelError1").addClass('hidden');
		//	$("#cardPageLevelErrorMsg").addClass('hidden');
		//$("#subHeaderMsg").removeClass('hidden');
	}
	/* to display page level error */
	function displayPageLevelError(errorMessage){
		$("#userID,#userIDMasked").prop("disabled",true);
		$("#checkAvailabilityWrapperDiv").remove();
		//$("#subHeaderMsg").addClass('cM-hide');
		$("#errorTextForAvail").html('');
		$("#availabilityMessage").addClass('hidden');
		$('#correctMsgDiv').text('');
		$("#cardPageLevelError1").removeClass('hidden');
		$('#cardPageLevelError1 .contains-icon').text(errorMessage);
		$('#userID-error-text1 .icon').remove();
		//$('#errMessageRetry').addClass('cM-hide');
		//$("#cardPageLevelErrorMsg").removeClass('cM-hide').text(errorMessage);
		//jQuery('input:visible,#userID,#password,#cbolui_onboard_confPassword').addClass('cF-InvalidInputBackground');
		$("#password").val("");
		$("#cbolui_onboard_confPassword").val("");
		window.scrollTo(0,0);
		//citiGlobal.common.siteCatalystModule.setSiteCatalystValuesForErrorPages(errorMessage,true);
	}
	function showUserIdList(userList){
        $("#avalabilityOptionDisplay").removeClass('hidden');   
        $("#availabilityOptions").removeClass('hidden');
        if(userList.length != 0 && userList != null){
	        $("#availabilityOptions ul").empty();
	        $('#appendData').empty();
	        for(var i=0;i<userList.length;i++){
	                        if(i==((userList.length)-1)){
	                                        $("#appendData").append("&nbsp;"+"<a class='cbolui-modules-sitecatalyst-link-trackable' >"+userList[i]+"</a>");
	                        }else{
	                                        $("#appendData").append("&nbsp;"+"<a class='cbolui-modules-sitecatalyst-link-trackable' >"+userList[i]+","+"</a>");
	
	                        }
	        }
	        $('#appendData a').css('cursor', 'pointer');
        }              
        $("#availabilityMessage").removeClass('hidden');
        jQuery("#appendData a").on('click', function(){
            var selectedOption = ($(this).text()).split(",");
            $("#userID").val(selectedOption[0]);
            $('#userIDMasked').trigger('focus');
            //$('#setupNewUserIdValueMasked').trigger('focus');
            //$("#setupNewUserIdValue,#setupNewUserIdValueMasked").off(".validation").removeClass('cF-InvalidInputBackground');
        });           

	}

	function parseJSONFromDOMElement(elId){
		var tempRule =  $('#'+elId).text();
		var valRule = {};
		try{
			valRule = JSON.parse(tempRule);
		}catch(e){
		}
		return valRule;
	}

	function setMaxLength(validationObj,elList){
		for(var i=0;i<elList.length;i++){
			el = elList[i];
			if(validationObj[el] != undefined &&
					validationObj[el].lengthValidation != undefined &&
					validationObj[el].lengthValidation.maxLength != undefined ){

				$('#'+el).attr('maxlength', validationObj[el].lengthValidation.maxLength);	
			}
		}
	}

	function formatter(number, flag){
		var formattedNumber = '';
		//number = number.toString();
		switch (flag) {
		case 17://For 15 + 2 '-'s
			var part1='',par2='',part3='',enteredNum ='';
			if(number.indexOf("-") !== -1){
				enteredNum = number.replace(/-/g, '');
			}else{
				enteredNum = number;
			}
			if((enteredNum.length > 4 && enteredNum.length < 10) || enteredNum.length === 10){
				if(number.indexOf("-") !== -1){
					number = number.replace(/-/g, '');
				}
				part1 = number.substring(0, 4);
				if(number.substring(4, number.length) !== ''){
					formattedNumber = part1 + '-' + number.substring(4, number.length);
				}else{
					formattedNumber = part1;
				}
			}else if((enteredNum.length > 4 && enteredNum.length < 15) || enteredNum.length === 15){
				if(number.indexOf("-") !== -1){
					number = number.replace(/-/g, '');
				}
				part1 = number.substring(0, 4);
				part2 = number.substring(4, 10);
				if(number.substring(10, number.length) !== ''){
					formattedNumber = part1 + '-' + part2 + '-' + number.substring(10, number.length);
				}else{
					formattedNumber = part1 + '-' + part2;
				}
			}else if(enteredNum.length > 15){
				if(number.indexOf("-") !== -1){
					number = number.replace(/-/g, '');
					number = number.substring(0, 15);
				}
				part1 = number.substring(0, 4);
				part2 = number.substring(4, 10);
				if(number.substring(10, number.length) !== ''){
					formattedNumber = part1 + '-' + part2 + '-' + number.substring(10, 15);
				}else{
					formattedNumber = part1 + '-' + part2;
				}
			}else{
				formattedNumber = number;
			}
			break;

		case 19://For 16 + 3 '-'s
			var part1='',par2='',part3='',part4='', enteredNum ='';
			if(number.indexOf("-") !== -1){
				enteredNum = number.replace(/-/g, '');
			}else{
				enteredNum = number;
			}
			if((enteredNum.length > 4 && enteredNum.length < 8) || enteredNum.length === 8){
				if(number.indexOf("-") !== -1){
					number = number.replace(/-/g, '');
				}
				part1 = number.substring(0, 4);
				if(number.substring(4, number.length) !== ''){
					formattedNumber = part1 + '-' + number.substring(4, number.length);
				}else{
					formattedNumber = part1;
				}
			}else if((enteredNum.length > 4 && enteredNum.length < 12) || enteredNum.length === 12){
				if(number.indexOf("-") !== -1){
					number = number.replace(/-/g, '');
				}
				part1 = number.substring(0, 4);
				part2 = number.substring(4, 8);
				if(number.substring(8, number.length) !== ''){
					formattedNumber = part1 + '-' + part2 + '-' + number.substring(8, number.length);
				}else{
					formattedNumber = part1 + '-' + part2;
				}
			}else if((enteredNum.length > 4 && enteredNum.length < 16) || enteredNum.length === 16){
				if(number.indexOf("-") !== -1){
					number = number.replace(/-/g, '');
				}
				part1 = number.substring(0, 4);
				part2 = number.substring(4, 8);
				part3 = number.substring(8, 12);
				if(number.substring(12, number.length) !== ''){
					formattedNumber = part1 + '-' + part2 + '-' + part3 + '-' + number.substring(12, number.length);
				}else{
					formattedNumber = part1 + '-' + part2 + '-' + part3;
				}
			}else if(enteredNum.length > 16){
				if(number.indexOf("-") !== -1){
					number = number.replace(/-/g, '');
					number = number.substring(0, 16);
				}
				part1 = number.substring(0, 4);
				part2 = number.substring(4, 8);
				part3 = number.substring(8, 12);
				if(number.substring(12, number.length) !== ''){
					formattedNumber = part1 + '-' + part2 + '-' + part3 + '-' + number.substring(12, 16);
				}else{
					formattedNumber = part1 + '-' + part2 + '-' + part3;
				}
			}else{
				formattedNumber = number;
			}
			break;
		}
		return formattedNumber;
	}

	function mobileNoformatter(number, flag){
		var formattedmobileNo = '';
		switch (flag) {
			case 14://For 10 & 2 '-' s & 1 '(' & 1 ')'
				var part1='',par2='',part3='',enteredNum ='';
				if(number.indexOf("-") !== -1){
					enteredNum = number.replace(/-/g, '');
				}else{
					enteredNum = number;
				}
				if(number.indexOf("(") !== -1){
					enteredNum = number.replace(/\(|\)/g, "");
				}else{
					enteredNum = number;
				}
				if(number.indexOf(")") !== -1){
					enteredNum = number.replace(/\(|\)/g, "");
				}else{
					enteredNum = number;
				}
				if(enteredNum.length === 3){
					if(number.indexOf("-") !== -1){
						number = number.replace(/-/g, '');
					}
					if(number.indexOf("(") !== -1){
						number = number.replace(/\(|\)/g, "");
					}
					if(number.indexOf(")") !== -1){
						number = number.replace(/\(|\)/g, "");
					}
					part1 = number.substring(0, 3);
					formattedmobileNo = '(' + part1 + ')';
				}else if((enteredNum.length > 3 && enteredNum.length < 6) || enteredNum.length === 6){
					if(number.indexOf("-") !== -1){
						number = number.replace(/-/g, '');
					}
					if(number.indexOf("(") !== -1){
						number = number.replace(/\(|\)/g, "");
					}
					if(number.indexOf(")") !== -1){
						number = number.replace(/\(|\)/g, "");
					}
					part1 = number.substring(0, 3);
					if(number.substring(3, number.length) !== ''){
						formattedmobileNo = '(' + part1 + ')-' + number.substring(3, number.length);
					}else{
						//formattedmobileNo = '(' + part1 + ')';
						formattedmobileNo = part1;
					}
				}else if((enteredNum.length > 3 && enteredNum.length < 10) || enteredNum.length === 10){
					if(number.indexOf("-") !== -1){
						number = number.replace(/-/g, '');
					}
					if(number.indexOf("(") !== -1){
						number = number.replace(/\(|\)/g, "");
					}
					if(number.indexOf(")") !== -1){
						number = number.replace(/\(|\)/g, "");
					}
					part1 = number.substring(0, 3);
					part2 = number.substring(3, 6);
					if(number.substring(6, number.length) !== ''){
						formattedmobileNo = '(' + part1 + ')-' + part2 + '-' + number.substring(6, number.length);
					}else{
						formattedmobileNo = '(' + part1 + ')-' + part2;
					}
				}else if(enteredNum.length > 10){
					if(number.indexOf("-") !== -1){
						number = number.replace(/-/g, '');
					}
					if(number.indexOf("(") !== -1){
						number = number.replace(/\(|\)/g, "");
					}
					if(number.indexOf(")") !== -1){
						number = number.replace(/\(|\)/g, "");
					}
					number = number.substring(0, 10);
					part1 = number.substring(0, 3);
					part2 = number.substring(3, 6);
					if(number.substring(6, number.length) !== ''){
						formattedmobileNo = '(' + part1 + ')-' + part2 + '-' + number.substring(6, 10);
					}else{
						formattedmobileNo = '(' + part1 + ')-' + part2;
					}
				}else{
					formattedmobileNo = number;
				}
				break;
			}
		return formattedmobileNo;
	}
	
	function restrictNonNumericChars(elList){
		for(var i=0;i<elList.length;i++){
			el = elList[i];
			$('#'+el).keypress(function(e){
				var key_codes = [48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 0, 8];
		
				if (!($.inArray(e.which, key_codes) >= 0)) {
					e.preventDefault();
				}
			});
		}
		
	}	
	
	 function submitByFormIdForCardInfoAdmin(formId){
		    var targetUrl = contextPath+"/CBOL/sec/useonboa/flow.action";
		    jQuery.ajax({
		      url: targetUrl,
		      type: 'post',
		      data: jQuery('#'+formId).serialize(),
		      async: true,
		      success : function(data) {
		        jQuery('#appBody').html(data);
		      },
		      error : function(jqXHR, textStatus, errorThrown){
		        $('#appBody').html(jqXHR.responseText);
		      }
		    });
		  }

	//function to modify styles only for mobile browsers
	function modifyStylesForDevice(){
		var device = isMobileBrowser() ;
		if(device === "iphone"){
		        $('#activationMsg span.glyphicon.glyphicon-ok.pull-left').css({'height':'60px'});
		 } else if(device === "android"){
		        $('#activationMsg span.glyphicon.glyphicon-ok.pull-left').css({'margin-right':'15px'});
		 }
	}
	
	//Function to check if mobile browser
	function isMobileBrowser(){
        if(navigator!= undefined && navigator.userAgent === 'Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12F70 Safari/600.1.4' ){
                   return "iphone";
        }else if (navigator!= undefined && navigator.userAgent === "Mozilla/5.0 (Linux; Android 5.0; SAMSUNG SM-N900 Build/LRX21V) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76      Mobile Safari/537.36" ){
                   return "android";
            }
	}
	
/********************************** Site Catalyst Implementation Starts ****************************************/
	
	parent.logSiteCatalyst = function(){var typeOfFlow ='';
	var flowFrom = parent.flowFrom;
	var pageName = parent.pageName;
	if(!(typeof flowFrom == 'undefined')){

		if(!(typeof s == 'undefined')){
		
			//Site Catalyst for Card Info Page
			if (parent.pageName === 'cardInfo' && !(typeof (parent.siteCatJSON) == 'undefined') && parent.siteCatJSON != null) {
			
			
				switch(flowFrom){

				case 'CNVActReg' : 
					s.pageName = parent.siteCatJSON.pageNameCNVActReg;
					s.eVar70 = parent.siteCatJSON.eVar70CNVActReg; 
					s.prop1 = parent.prop1;
					s.prop2 = parent.prop2;
					s.events=parent.events;
					break;
				case 'CNVReg': 
					s.pageName = parent.siteCatJSON.pageNameCNVReg;
					s.eVar70 = parent.siteCatJSON.eVar70CNVReg;
					s.prop1 = parent.prop1;
					s.prop2 = parent.prop2;
					s.events=parent.events;
					break;
				case 'NTCActReg' : 
					s.pageName = parent.siteCatJSON.pageNameNTCActReg;
					s.eVar70 = parent.siteCatJSON.eVar70NTCActReg;
					s.prop1 = parent.prop1;
					s.prop2 = parent.prop2;
					s.events=parent.events;
					break;
				case 'NTCReg': 
					s.pageName = parent.siteCatJSON.pageNameNTCReg;
					s.eVar70 = parent.siteCatJSON.eVar70NTCReg;
					s.prop1 = parent.prop1;
					s.prop2 = parent.prop2;
					s.events=parent.events;
					break;

				default : break;
				}
			}
			
			//Site Catalyst for Re-Register flow
			else if (pageName === 'alreadyRegistered') {
				s.events = parent.events;
				s.eVar70 = parent.eVar70;
				s.prop1 = parent.prop1;
				s.prop2 = parent.prop2;	
				s.eVar72 = parent.eVar72;

			}
			
			//Site Catalyst for Contact Info Page
			else if (pageName === 'contactInfo' && !(typeof (parent.siteCatJSON) == 'undefined') && parent.siteCatJSON != null) {
				
				switch(flowFrom){

			case 'CNVActReg' : 
				s.pageName = parent.siteCatJSON.pageNameCNVActReg; 
				s.events = parent.siteCatJSON.eventsCNVActReg;
				if(parent.isPrimaryUser){
					s.eVar72 = parent.siteCatJSON.eVar72PrimaryCNVActReg;
				}else{
					s.eVar72 = parent.siteCatJSON.eVar72AuthCNVActReg;
				}
				s.eVar70 = parent.siteCatJSON.eVar70CNVActReg;
				s.prop1 = parent.prop1;
				s.prop2 = parent.prop2;
				
				break;
			case 'CNVReg': 
				s.pageName = parent.siteCatJSON.pageNameCNVReg;
				s.events = parent.siteCatJSON.eventsCNVReg;
				if(parent.isPrimaryUser){
					s.eVar72 = parent.siteCatJSON.eVar72PrimaryCNVReg;
				}else{
					s.eVar72 = parent.siteCatJSON.eVar72AuthCNVReg;
				}
				s.eVar70 = parent.siteCatJSON.eVar70CNVReg;
				s.prop1 = parent.prop1;
				s.prop2 = parent.prop2;
				
				break;
			case 'NTCActReg' : 
				s.pageName = parent.siteCatJSON.pageNameNTCActReg; 
				s.events = parent.siteCatJSON.eventsNTCActReg;
				if(parent.isPrimaryUser){
					s.eVar72 = parent.siteCatJSON.eVar72PrimaryNTCActReg;
				}else{
					s.eVar72 = parent.siteCatJSON.eVar72AuthNTCActReg;
				}
				s.eVar70 = parent.siteCatJSON.eVar70NTCActReg;
				s.prop1 = parent.prop1;
				s.prop2 = parent.prop2;
				
				break;
			case 'NTCReg': 
				s.pageName = parent.siteCatJSON.pageNameNTCReg; 
				s.events = parent.siteCatJSON.eventsNTCReg;
				if(parent.isPrimaryUser){
					s.eVar72 = parent.siteCatJSON.eVar72PrimaryNTCReg;
				}else{
					s.eVar72 = parent.siteCatJSON.eVar72AuthNTCReg;
				}
				s.eVar70 = parent.siteCatJSON.eVar70NTCReg;
				s.prop1 = parent.prop1;
				s.prop2 = parent.prop2;
				
				break;

			default : break;
			}
		}
			
			//Site Catalyst for Online Access Page
			else if (pageName === 'onlineAccess') {	
				s.events = parent.events;
				s.eVar70 = parent.eVar70;
				s.prop1 = parent.prop1;
				s.prop2 = parent.prop2;			
			}

			//Site Catalyst for Security Info Page
			else if (pageName === 'security') {	
				s.events = parent.events;
				s.eVar70 = parent.eVar70;
				s.prop1 = parent.prop1;
				s.prop2 = parent.prop2;	
			}
			
			//Site Catalyst for AuthOrEmpUser Page
			else if (pageName === 'authOrEmp') {
				s.events = parent.events;
				s.eVar70 = parent.eVar70;
				s.prop1 = parent.prop1;
				s.prop2 = parent.prop2;	
			}
			
			//Site Catalyst for confirmationBodySection Page
			else if (parent.pageName === 'confirmationBodySection' && !(typeof (parent.siteCatJSON) == 'undefined') && parent.siteCatJSON != null) {
				
				switch(flowFrom){

				case 'cardToConfirm' : 
					s.pageName = parent.siteCatJSON.PgNme_cardToConfirm; 
					s.events = parent.siteCatJSON.events_cardToConfirm;
					s.eVar72 = parent.siteCatJSON.eVar72_cardToConfirm;
					s.eVar70 = parent.siteCatJSON.eVar70_cardToConfirm;
					s.prop1 = parent.prop1;
					s.prop2 = parent.prop2;	
					
					break;
				case 'contactToconfirm': 
					s.pageName = parent.siteCatJSON.PgNme_contactToconfirm; 
					s.prop1 = parent.prop1;
					s.prop2 = parent.prop2;	
					s.events = parent.siteCatJSON.events_contactToconfirm;
					s.eVar72 = parent.siteCatJSON.eVar72_contactToconfirm;
					s.eVar70 = parent.siteCatJSON.eVar70_contactToconfirm;
					
					break;
				case 'newUser_SecurityNotAEToConfirm' : 
					s.pageName = parent.siteCatJSON.PgNme_newUser_SecurityNotAEToConfirm;
					s.prop1 = parent.prop1;
					s.prop2 = parent.prop2;	

					if(parent.isPrimaryUser){
						s.eVar72 = parent.siteCatJSON.eVar72_primary_newUser_SecurityNotAEToConfirm;
					}
					else{
						s.eVar72 = parent.siteCatJSON.eVar72_authorized_newUser_SecurityNotAEToConfirm;
					}

					if(parent.isPaperlessEnrolled){
						s.events = parent.siteCatJSON.events_Paperless_newUser_SecurityNotAEToConfirm;
					}
					else{
						s.events = parent.siteCatJSON.events_newUser_SecurityNotAEToConfirm
					}
					s.eVar70 = parent.siteCatJSON.eVar70_newUser_SecurityNotAEToConfirm;
					
					break;
				case 'existingUser_SecurityNotAEToConfirm': 
					s.pageName = parent.siteCatJSON.PgNme_existingUser_SecurityNotAEToConfirm; 
					s.prop1 = parent.prop1;
					s.prop2 = parent.prop2;	
					if(parent.isPrimaryUser){
						s.eVar72 = parent.siteCatJSON.eVar72_primary_existingUser_SecurityNotAEToConfirm;
					}
					else{
						s.eVar72 = parent.siteCatJSON.eVar72_authorized_existingUser_SecurityNotAEToConfirm;
					}

					if(parent.isPaperlessEnrolled){
						s.events = parent.siteCatJSON.events_Paperless_existingUser_SecurityNotAEToConfirm;
					}
					else{
						s.events = parent.siteCatJSON.events_existingUser_SecurityNotAEToConfirm;
					}

					s.eVar70 = parent.siteCatJSON.eVar70_existingUser_SecurityNotAEToConfirm;
					
					break;
				case 'authToconfirm': 
					s.pageName = parent.siteCatJSON.PgNme_authToconfirm; 
					s.prop1 = parent.prop1;
					s.prop2 = parent.prop2;	
					if(parent.isPrimaryUser){
						if(parent.noOfAuthUsersActivated>0 && parent.noOfOnlineAccessGrantedUsers>0){
				              s.eVar72 = parent.siteCatJSON.eVar72_primary_authToconfirm+parent.authUsers+parent.GrntdOnlne;
				        }
						else if(parent.noOfAuthUsersActivated>0){
				              s.eVar72 = parent.siteCatJSON.eVar72_primary_authToconfirm+parent.authUsers;
				        }
						else if (parent.noOfOnlineAccessGrantedUsers>0){
				              s.eVar72 = parent.siteCatJSON.eVar72_primary_authToconfirm+parent.GrntdOnlne;
				        }else{
				              s.eVar72 = parent.siteCatJSON.eVar72_primary_authToconfirm;
				            
						}

					}
					else{
						s.eVar72 = parent.siteCatJSON.eVar72_authorized_primary_authToconfirm;
					}

					if(parent.isPaperlessEnrolled){
						s.events = parent.siteCatJSON.events_Paperless_authToconfirm;
					}
					else{
						s.events = parent.siteCatJSON. events_authToconfirm;
					}

					s.eVar70 = parent.siteCatJSON.eVar70_authToconfirm;
					break;

				default : break;
				}
			}
			else if (pageName === 'verificationAdmin')
			{
				s.events = parent.events;
				s.eVar70 = parent.eVar70;
				s.prop1 = parent.prop1;
				s.prop2 = parent.prop2;
				s.prop3 = parent.prop3;
			}
			else if (pageName === 'onlineAccessAdmin') {	
				s.events = parent.events;
				s.eVar70 = parent.eVar70;
				s.prop1 = parent.prop1;
				s.prop2 = parent.prop2;	
				s.prop3 = parent.prop3;
			}
			else if (pageName === 'securityAdmin') {	
				s.events = parent.events;
				s.eVar70 = parent.eVar70;
				s.prop1 = parent.prop1;
				s.prop2 = parent.prop2;	
				s.prop3 = parent.prop3;
			}
			else if (pageName === 'confirmationAdmin') {	
				s.events = parent.events;
				s.eVar70 = parent.eVar70;
				s.prop1 = parent.prop1;
				s.prop2 = parent.prop2;	
				s.prop3 = parent.prop3;
			}
		}
	}};
	
	//function to modify styles only for mobile browsers
	function modifyStylesForDevice(){
		var device = isMobileBrowser() ;
		if(device === "iphone"){
		        $('#activationMsg span.glyphicon.glyphicon-ok.pull-left').css({'height':'60px'});
		 } else if(device === "android"){
		        $('#activationMsg span.glyphicon.glyphicon-ok.pull-left').css({'margin-right':'15px'});
		 }
	}
	
	//Function to check if mobile browser
	function isMobileBrowser(){
        if(navigator!= undefined && navigator.userAgent === 'Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4 (KHTML, like Gecko) Version/8.0 Mobile/12F70 Safari/600.1.4' ){
                   return "iphone";
        }else if (navigator!= undefined && navigator.userAgent === "Mozilla/5.0 (Linux; Android 5.0; SAMSUNG SM-N900 Build/LRX21V) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76      Mobile Safari/537.36" ){
                   return "android";
            }
	}

	
	
	/********************************** Site Catalyst Implementation Ends ****************************************/	

	return parent;
}(window, window.jQuery));
